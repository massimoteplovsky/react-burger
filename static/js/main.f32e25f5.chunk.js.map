{"version":3,"sources":["components/layout/layout.module.css","components/modal-overlay/modal-overlay.module.css","pages/home/home.module.css","components/burger-ingredients/burger-ingredients.module.css","components/ingredients-tabs/ingredients-tabs.module.css","components/ingredients-list-container/ingredients-list-container.module.css","components/ingredients-list/ingredients-list.module.css","components/no-ingredient/no-ingredient.module.css","components/main-ingredients-list/main-ingredients-list.module.css","components/no-ingredients/no-ingredients.module.css","components/order-details/order-details.module.css","components/form-error/form-error.module.css","utils/constants.ts","services/ducks/app/app.ts","services/ducks/ingredients/ingredients.ts","services/ducks/burger-ingredients/burger-ingredients.ts","utils/helpers.ts","services/ducks/orders/orders.ts","services/ducks/user/user.ts","services/ducks/order/order.ts","services/ducks/index.ts","utils/api.ts","services/store.ts","services/socketMiddleware.ts","services/hooks.ts","components/app-header/app-header.tsx","components/layout/layout.tsx","components/loader/loader.tsx","components/error/error.tsx","components/modal-overlay/modal-overlay.tsx","components/modal/modal.tsx","components/ingredient-details/ingredient-details.tsx","components/order-info/order-info.tsx","components/protected-route/protected-route.tsx","components/ingredients-tabs/ingredients-tabs.tsx","components/ingredient-item/ingredient-item.tsx","components/ingredients-list/ingredients-list.tsx","components/ingredients-list-container/ingredients-list-container.tsx","components/burger-ingredients/burger-ingredients.tsx","components/no-ingredient/no-ingredient.tsx","components/bun-ingredient/bun-ingredient.tsx","components/main-ingredient/main-ingredient.tsx","components/main-ingredients-list/main-ingredients-list.tsx","components/submit-section/submit-section.tsx","components/no-ingredients/no-ingredients.tsx","images/done.gif","components/order-details/order-details.tsx","components/burger-constructor/burger-constructor.tsx","pages/home/home.tsx","hooks/form.ts","components/form-error/form-error.tsx","pages/registration/registration.tsx","pages/login/login.tsx","components/profile-form/profile-form.tsx","components/order-item/order-item.tsx","components/orders-list/orders-list.tsx","pages/profile/profile.tsx","pages/ingredient/ingredient.tsx","pages/forgot-password/forgot-password.tsx","pages/reset-password/reset-password.tsx","pages/not-found/not-found.tsx","pages/feed/feed.tsx","pages/order/order.tsx","components/app/app.tsx","index.tsx","components/order-info/order-info.module.css","components/app-header/app-header.module.css","pages/profile/profile.module.css","components/order-item/order-item.module.css","pages/feed/feed.module.css","components/ingredient-item/ingredient-item.module.css","pages/login/login.module.css","components/profile-form/profile-form.module.css","pages/ingredient/ingredient.module.css","components/ingredient-details/ingredient-details.module.css","components/burger-constructor/burger-constructor.module.css","pages/registration/registration.module.css","pages/forgot-password/forgot-password.module.css","pages/reset-password/reset-password.module.css","components/loader/loader.module.css","components/modal/modal.module.css","components/main-ingredient/main-ingredient.module.css","pages/order/order.module.css","components/error/error.module.css","components/submit-section/submit-section.module.css","components/orders-list/orders-list.module.css","pages/not-found/not-found.module.css"],"names":["module","exports","ApiRoute","Token","OrderStatus","OrderType","BunPosition","IngredientType","ActionPrefix","TAB_ITEMS","name","type","RoutePath","id","REPO_NAME","setError","createAction","APP","appReducer","createReducer","isError","builder","addCase","state","payload","addDefaultCase","getAppState","app","fetchAllIngredients","createAsyncThunk","INGREDIENTS","_","a","rejectWithValue","dispatch","request","extra","data","reducer","ingredientsList","isLoading","fulfilled","rejected","getIngredientsState","ingredients","getAllIngredients","getFilteredIngredients","createSelector","reduce","acc","ingredient","push","addIngredient","BURGER_INGREDIENTS","removeIngredient","sortMainIngredients","resetBurgerIngredients","initialState","burgerData","bunIngredient","mainIngredients","BUN","startIndex","moveToIndex","slice","splice","ingredientIndex","getBurgerIngredients","burgerIngredients","getTotalPrice","bunPrice","price","totalPrice","getBurgerIgredientsIdsCount","_id","setToken","value","localStorage","setItem","deleteToken","removeItem","getToken","getItem","checkAuth","Boolean","ACCESS_TOKEN","getOrderStatus","status","created","done","pending","generateDate","date","day","diffInDays","differenceInDays","Date","number","textForms","n","Math","abs","n1","declOfNum","format","wsInitAllOrders","ORDERS","wsInitUserOrders","wsSendMessage","wsConnectionSuccess","wsConnectionError","wsConnectionClosed","wsGetMessage","clearCurrentOrder","fetchCurrentOrder","orderNumber","orderData","order","orders","find","Number","isConnected","ordersData","currentOrder","populateIngredients","ingredientsIds","allIngredients","map","findIndex","item","quantity","sort","b","bunIndex","calculateTotalPrice","getOrdersState","getAllOrders","ordersState","newOrders","populatedIngredients","getFilteredOrders","Object","keys","key","arr","size","newArr","i","length","chunk","getOrder","wsAction","onOpen","onClose","onError","onMessage","resetStatus","USER","registerUser","formData","AUTH_REGISTRATION","method","headers","body","JSON","stringify","accessToken","refreshToken","user","REFRESH_TOKEN","loginUser","AUTH_LOGIN","sendUserEmailToResetPassword","PASSWORD_RESET","resetPassword","PASSWORD_RESET_RESET","logoutUser","AUTH_LOGOUT","token","refreshUserToken","asyncAction","AUTH_TOKEN","fetchUserData","AUTH_USER","Authorization","message","updateUserData","userData","success","getUserState","resetOrder","ORDER","sendOrder","getOrderState","rootReducer","ingredientsReducer","burderIngredientsReducer","ordersReducer","userReducer","ENDPOINT","REQUEST_ERRORS","controller","AbortController","timeoutId","setTimeout","abort","createRequest","onRequestFail","url","options","fetch","signal","response","clearTimeout","get","includes","json","ok","Promise","reject","Error","store","configureStore","middleware","getDefaultMiddleware","thunk","extraArgument","concat","wsUrl","wsActions","socket","next","action","toString","WebSocket","split","onopen","onerror","onmessage","event","parsedData","parse","onclose","console","log","close","send","devTools","process","useAppDispatch","useDispatch","useAppSelector","useSelector","AppHeader","className","s","header","mainNav","to","navItem","activeClassName","navItemActive","exact","logo","memo","Layout","children","mainContainer","Loader","loaderWrapper","logoContainer","spinner","errorWrapper","errorContainer","onClick","window","location","reload","ModalOverlay","forwardRef","ref","onCloseModal","modalOverlay","Modal","title","isTitled","titleClasses","handleCloseModal","modalOverlayRef","useRef","modalRoot","document","getElementById","useCallback","e","target","current","keyCode","useEffect","addEventListener","removeEventListener","ReactDOM","createPortal","modalContainer","modalContainerNoTitle","cn","modalTitle","IngredientDetails","image_large","calories","fat","energyValues","proteins","carbohydrates","container","src","alt","energyValueBlock","index","valueItem","OrderInfo","createdAt","orderBlock","readyStatus","ingredientsBlock","image_mobile","image","orderInfo","ProtectedRoute","rest","isAuth","render","pathname","from","IngredientsTabs","activeTab","setIsScrollMethod","setActiveTab","tabsBlock","active","IngredientItem","handleClickIngredientItem","useDrag","collect","monitor","isDrag","isDragging","dragRef","ingredientItem","draggableIngredientItem","count","IngredientsList","history","useHistory","useLocation","burgerIngredientId","modalLocation","currentIngredient","ingredientList","IngredientsListContainer","isScrollMethod","filteredIngredients","containerRef","ingredientsTitleRef","useMemo","createRef","scrollIntoView","ingredientsContainer","onScroll","distance","getBoundingClientRect","top","nearestTitle","BurgerIngredients","useState","burgerIngredientsSection","NoIngredient","text","BunIngredient","position","positionName","TOP","isLocked","thumbnail","MainIngredient","dragDropRef","draggingItemIndex","draggingItem","useDrop","accept","drop","isHover","isOver","dropRef","isHoveredSameIngredient","ingredientItemDragging","ingredientItemHovered","handleClose","handleDeleteIngredient","MainIngredientsList","SubmitSection","isDisabled","handleSendOrder","submitSection","NoIngredients","noIngredientsBlock","OrderDetails","OrderAccepted","BurgerConstructor","isIngredientsExist","handleDrop","canDrop","burgerConstructorSection","hoverBurgerConstructorSection","BOTTOM","orderSending","Home","DndProvider","backend","HTML5Backend","useForm","formState","setFormData","isEdited","setIsEdited","handleChangeFormData","handleResetFormData","FormError","errorText","Registration","email","password","handleSubmit","preventDefault","section","form","onSubmit","placeholder","onChange","link","Login","ProfileForm","icon","formActions","cancelBtn","OrderItem","isShownOrderStatus","style","zIndex","display","OrdersList","orderLink","Note","Profile","handleLogout","fetchUser","profileNav","navBtn","content","path","Ingredient","ingredientId","useParams","ingredientContainer","ForgotPassword","isFromForgotPasswordPage","ResetPassword","NotFound","notFoundSection","Feed","filteredOrders","total","totalToday","renderStatusBlock","statusBlock","color","dashboard","statusContainer","Order","fetchOrder","orderContainer","orderNotFound","App","fetchIngredients","goBack","basename","StrictMode"],"mappings":"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","file":"static/js/main.f32e25f5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"layout_mainContainer__22NM_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalOverlay\":\"modal-overlay_modalOverlay__QWzdb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"home_container__1ShKM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burgerIngredientsSection\":\"burger-ingredients_burgerIngredientsSection__18vf4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabsBlock\":\"ingredients-tabs_tabsBlock__2gWm-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredientsContainer\":\"ingredients-list-container_ingredientsContainer__2W5TB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredientList\":\"ingredients-list_ingredientList__1jFf6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"no-ingredient_text__2kuLw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredientsList\":\"main-ingredients-list_ingredientsList__-EPTn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noIngredientsBlock\":\"no-ingredients_noIngredientsBlock__14Yox\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"order-details_container__2ePBw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorText\":\"form-error_errorText__kmHXF\"};","export enum ApiRoute {\r\n  INGREDIENTS = 'ingredients',\r\n  ORDERS = 'orders',\r\n  AUTH_REGISTRATION = 'auth/register',\r\n  AUTH_LOGIN = 'auth/login',\r\n  AUTH_LOGOUT = 'auth/logout',\r\n  AUTH_TOKEN = 'auth/token',\r\n  AUTH_USER = 'auth/user',\r\n  PASSWORD_RESET = 'password-reset',\r\n  PASSWORD_RESET_RESET = 'password-reset/reset',\r\n}\r\n\r\nexport enum Token {\r\n  ACCESS_TOKEN = 'accessToken',\r\n  REFRESH_TOKEN = 'refreshToken',\r\n}\r\n\r\nexport enum OrderStatus {\r\n  done = 'done',\r\n  pending = 'pending',\r\n  created = 'created',\r\n  inProgress = 'inProgress',\r\n}\r\n\r\nexport enum OrderType {\r\n  ALL_ORDERS = 'allOrders',\r\n  USER_ORDERS = 'userOrders',\r\n}\r\n\r\nexport const TOKEN_ERROR_TYPES = ['jwt expired', 'invalid token'];\r\n\r\nexport enum BunPosition {\r\n  TOP = 'top',\r\n  BOTTOM = 'bottom',\r\n}\r\n\r\nexport enum IngredientType {\r\n  BUN = 'bun',\r\n  SAUCE = 'sauce',\r\n  MAIN = 'main',\r\n}\r\n\r\nexport const TAB_ITEMS = [\r\n  {\r\n    name: 'Булки',\r\n    type: 'bun',\r\n  },\r\n  {\r\n    name: 'Соусы',\r\n    type: 'sauce',\r\n  },\r\n  {\r\n    name: 'Начинки',\r\n    type: 'main',\r\n  },\r\n];\r\n\r\nexport enum ActionPrefix {\r\n  APP = 'app',\r\n  ORDER = 'app/order',\r\n  ORDERS = 'app/orders',\r\n  USER = 'app/user',\r\n  INGREDIENTS = 'app/ingredients',\r\n  CURRENT_INGREDIENT = 'app/currentIngredient',\r\n  BURGER_INGREDIENTS = 'app/burgerIngredients',\r\n}\r\n\r\nexport const RoutePath = {\r\n  HOME: '/',\r\n  LOGIN: '/login',\r\n  REGISTRATION: '/register',\r\n  FORGOT_PASSWORD: '/forgot-password',\r\n  RESET_PASSWORD: '/reset-password',\r\n  FEED: '/feed',\r\n  FEED_ID: (id: string): string => `/feed/${id}`,\r\n  PROFILE: '/profile',\r\n  PROFILE_ORDERS: '/profile/orders',\r\n  PROFILE_ORDERS_ID: (id: string): string => `/profile/orders/${id}`,\r\n  INGREDIENT: (id: string): string => `/ingredients/${id}`,\r\n};\r\n\r\nexport const REPO_NAME = '/react-burger';\r\n","import { createAction, createReducer } from '@reduxjs/toolkit';\r\nimport { ActionPrefix } from '../../../utils/constants';\r\nimport { RootState } from '../../store';\r\n\r\nexport interface IAppState {\r\n  isError: boolean;\r\n}\r\n\r\n// Actions\r\nexport const setError = createAction<boolean>(`${ActionPrefix.APP}/setError`);\r\n\r\n// Reducer\r\nconst initialState: IAppState = {\r\n  isError: false,\r\n};\r\n\r\nconst appReducer = createReducer(initialState, (builder) => {\r\n  builder\r\n    .addCase(setError, (state, { payload }) => {\r\n      state.isError = payload;\r\n    })\r\n    .addDefaultCase((state) => state);\r\n});\r\n\r\n// Selectors\r\nexport const getAppState = ({ app }: RootState): IAppState => app;\r\n\r\nexport default appReducer;\r\n","import {\r\n  createReducer,\r\n  createAsyncThunk,\r\n  createSelector,\r\n} from '@reduxjs/toolkit';\r\nimport { ApiRoute } from '../../../utils/constants';\r\nimport { ActionPrefix } from '../../../utils/constants';\r\nimport { setError } from '../app/app';\r\nimport { RootState, AppDispatch } from '../../store';\r\nimport { TIngredient, TIngredients } from '../../../utils/prop-validator';\r\n\r\nexport interface IIngredientsState {\r\n  ingredientsList: TIngredients;\r\n  isLoading: boolean;\r\n}\r\n\r\n// Actions\r\nexport const fetchAllIngredients = createAsyncThunk<\r\n  TIngredients,\r\n  void,\r\n  {\r\n    rejectValue: void;\r\n    dispatch: AppDispatch;\r\n    extra: { request: (endpoint: string) => Promise<{ data: TIngredients }> };\r\n  }\r\n>(\r\n  `${ActionPrefix.INGREDIENTS}/fetchAllIngredients`,\r\n  async (_, { rejectWithValue, dispatch, extra: { request } }) => {\r\n    try {\r\n      const { data } = await request(ApiRoute.INGREDIENTS);\r\n      return data;\r\n    } catch {\r\n      dispatch(setError(true));\r\n      return rejectWithValue();\r\n    }\r\n  }\r\n);\r\n\r\n// Reducer\r\nconst initialState: IIngredientsState = {\r\n  ingredientsList: [],\r\n  isLoading: true,\r\n};\r\n\r\nconst reducer = createReducer(initialState, (builder) => {\r\n  builder\r\n    .addCase(fetchAllIngredients.fulfilled, (state, { payload }) => {\r\n      state.ingredientsList = payload;\r\n      state.isLoading = false;\r\n    })\r\n    .addCase(fetchAllIngredients.rejected, (state) => {\r\n      state.ingredientsList = [];\r\n      state.isLoading = false;\r\n    })\r\n    .addDefaultCase((state) => state);\r\n});\r\n\r\n// Selectors\r\nexport const getIngredientsState = ({\r\n  ingredients,\r\n}: RootState): IIngredientsState => ingredients;\r\n\r\nexport const getAllIngredients = ({ ingredients }: RootState): TIngredients =>\r\n  ingredients.ingredientsList;\r\n\r\nexport const getIngredient =\r\n  (ingredientId: string) =>\r\n  ({ ingredients }: RootState): TIngredient =>\r\n    ingredients.ingredientsList.find(({ _id }) => _id === ingredientId);\r\n\r\nexport const getFilteredIngredients = createSelector(\r\n  getAllIngredients,\r\n  (ingredients) =>\r\n    ingredients.reduce<Record<string, TIngredients>>((acc, ingredient) => {\r\n      const { type } = ingredient;\r\n      !acc[type] ? (acc[type] = [ingredient]) : acc[type].push(ingredient);\r\n      return acc;\r\n    }, {})\r\n);\r\n\r\nexport default reducer;\r\n","import { createReducer, createAction, createSelector } from '@reduxjs/toolkit';\r\nimport { IngredientType } from '../../../utils/constants';\r\nimport { ActionPrefix } from '../../../utils/constants';\r\nimport { RootState } from '../../store';\r\nimport { TIngredients, TIngredient } from '../../../utils/prop-validator';\r\n\r\nexport interface IBurgerIngredientsState {\r\n  burgerData: {\r\n    bunIngredient: TIngredient | null;\r\n    mainIngredients: TIngredients;\r\n  };\r\n}\r\n\r\ntype TSortIngredients = {\r\n  startIndex: number;\r\n  moveToIndex: number;\r\n};\r\n\r\n// Actions\r\nexport const addIngredient = createAction<TIngredient>(\r\n  `${ActionPrefix.BURGER_INGREDIENTS}/addIngredient`\r\n);\r\nexport const removeIngredient = createAction<number>(\r\n  `${ActionPrefix.BURGER_INGREDIENTS}/removeIngredient`\r\n);\r\nexport const sortMainIngredients = createAction<TSortIngredients>(\r\n  `${ActionPrefix.BURGER_INGREDIENTS}/sortMainIngredients`\r\n);\r\nexport const resetBurgerIngredients = createAction(\r\n  `${ActionPrefix.BURGER_INGREDIENTS}/resetBurgerIngredients`\r\n);\r\n\r\n// Reducer\r\nconst initialState: IBurgerIngredientsState = {\r\n  burgerData: {\r\n    bunIngredient: null,\r\n    mainIngredients: [],\r\n  },\r\n};\r\n\r\nconst reducer = createReducer(initialState, (builder) => {\r\n  builder\r\n    .addCase(addIngredient, (state, { payload: ingredient }) => {\r\n      if (ingredient.type === IngredientType.BUN) {\r\n        state.burgerData.bunIngredient = ingredient;\r\n        return;\r\n      }\r\n      state.burgerData.mainIngredients.push(ingredient);\r\n    })\r\n    .addCase(sortMainIngredients, (state, { payload }) => {\r\n      const { startIndex, moveToIndex } = payload;\r\n      const ingredient = state.burgerData.mainIngredients[startIndex];\r\n      const mainIngredients = [\r\n        ...state.burgerData.mainIngredients.slice(0, startIndex),\r\n        ...state.burgerData.mainIngredients.slice(startIndex + 1),\r\n      ];\r\n\r\n      mainIngredients.splice(moveToIndex, 0, ingredient);\r\n      state.burgerData.mainIngredients = mainIngredients;\r\n    })\r\n    .addCase(removeIngredient, (state, { payload: ingredientIndex }) => {\r\n      state.burgerData.mainIngredients.splice(ingredientIndex, 1);\r\n    })\r\n    .addCase(resetBurgerIngredients, () => initialState)\r\n    .addDefaultCase((state) => state);\r\n});\r\n\r\n// Selectors\r\nexport const getBurgerIngredients = ({\r\n  burgerIngredients,\r\n}: RootState): { bunIngredient: TIngredient; mainIngredients: TIngredients } =>\r\n  burgerIngredients.burgerData;\r\n\r\nexport const getTotalPrice = createSelector(\r\n  getBurgerIngredients,\r\n  (burgerIngredients): number => {\r\n    const { bunIngredient, mainIngredients } = burgerIngredients;\r\n    const bunPrice = bunIngredient?.price * 2 || 0;\r\n\r\n    const totalPrice =\r\n      mainIngredients.reduce(\r\n        (totalPrice, { price }) => (totalPrice += price),\r\n        0\r\n      ) + bunPrice;\r\n\r\n    return totalPrice;\r\n  }\r\n);\r\n\r\nexport const getBurgerIgredientsIdsCount = createSelector(\r\n  getBurgerIngredients,\r\n  (burgerIngredients) => {\r\n    const { bunIngredient, mainIngredients } = burgerIngredients;\r\n    const ingredients = bunIngredient\r\n      ? [bunIngredient, ...mainIngredients]\r\n      : mainIngredients;\r\n\r\n    return ingredients.reduce<Record<string, number>>((acc, { _id }) => {\r\n      !acc[_id] ? (acc[_id] = 1) : (acc[_id] += 1);\r\n      return acc;\r\n    }, {});\r\n  }\r\n);\r\n\r\nexport default reducer;\r\n","import { differenceInDays, format } from 'date-fns';\r\nimport { OrderStatus, Token } from './constants';\r\n\r\nexport const setToken = (name: string, value: string): void => {\r\n  localStorage.setItem(name, value);\r\n};\r\n\r\nexport const deleteToken = (name: string): void => {\r\n  localStorage.removeItem(name);\r\n};\r\n\r\nexport const getToken = (name: string): string => {\r\n  return localStorage.getItem(name);\r\n};\r\n\r\nexport const checkAuth = (): boolean => Boolean(getToken(Token.ACCESS_TOKEN));\r\n\r\nexport const chunk = (arr: number[], size: number): Array<number[]> => {\r\n  const newArr = [];\r\n  for (let i = 0; i < arr.length; i += size) {\r\n    newArr.push(arr.slice(i, i + size));\r\n  }\r\n  return newArr;\r\n};\r\n\r\nexport const getOrderStatus = (status: string): string => {\r\n  switch (status) {\r\n    case OrderStatus.created:\r\n      return 'Создан';\r\n    case OrderStatus.done:\r\n      return 'Выполнен';\r\n    case OrderStatus.pending:\r\n      return 'Готовится';\r\n    default:\r\n      return 'Отменен';\r\n  }\r\n};\r\n\r\nexport const declOfNum = (number: number, textForms: string[]): string => {\r\n  const n = Math.abs(number) % 100;\r\n  const n1 = n % 10;\r\n  if (n > 10 && n < 20) return textForms[2];\r\n  if (n1 > 1 && n1 < 5) return textForms[1];\r\n  if (n1 === 1) return textForms[0];\r\n  return textForms[2];\r\n};\r\n\r\nexport const generateDate = (date: string): string => {\r\n  const diffInDays = differenceInDays(new Date(), new Date(date));\r\n\r\n  let day;\r\n  if (diffInDays === 0) day = 'Сегодня';\r\n  if (diffInDays === 1) day = 'Вчера';\r\n  if (diffInDays > 1)\r\n    day = `${diffInDays} ${declOfNum(diffInDays, [\r\n      'день',\r\n      'дня',\r\n      'дней',\r\n    ])} назад`;\r\n\r\n  return `${day}, ${format(new Date(date), 'HH:mm')} i-GMT+3`;\r\n};\r\n","import {\r\n  createReducer,\r\n  createAction,\r\n  createSelector,\r\n  createAsyncThunk,\r\n} from '@reduxjs/toolkit';\r\nimport {\r\n  IngredientType,\r\n  ActionPrefix,\r\n  ApiRoute,\r\n} from '../../../utils/constants';\r\nimport { getAllIngredients } from '../ingredients/ingredients';\r\nimport { chunk } from '../../../utils/helpers';\r\nimport {\r\n  TOrderResponse,\r\n  TIngredients,\r\n  TOrder,\r\n} from '../../../utils/prop-validator';\r\nimport { RootState, AppDispatch } from '../../store';\r\nimport { setError } from '../app/app';\r\n\r\nexport interface IOrdersState {\r\n  isLoading: boolean;\r\n  isConnected: boolean;\r\n  ordersData: TOrderResponse | null;\r\n  currentOrder: TOrder | null;\r\n}\r\n\r\n// Actions\r\nexport const wsInitAllOrders = createAction(\r\n  `${ActionPrefix.ORDERS}/wsInitAllOrders`\r\n);\r\nexport const wsInitUserOrders = createAction(\r\n  `${ActionPrefix.ORDERS}/wsInitUserOrders`\r\n);\r\nexport const wsSendMessage = createAction(\r\n  `${ActionPrefix.ORDERS}/wsSendMessage`\r\n);\r\nexport const wsConnectionSuccess = createAction(\r\n  `${ActionPrefix.ORDERS}/wsConnectionSuccess`\r\n);\r\nexport const wsConnectionError = createAction(\r\n  `${ActionPrefix.ORDERS}/wsConnectionError`\r\n);\r\nexport const wsConnectionClosed = createAction(\r\n  `${ActionPrefix.ORDERS}/wsConnectionClosed`\r\n);\r\nexport const wsGetMessage = createAction(`${ActionPrefix.ORDERS}/wsGetMessage`);\r\nexport const clearCurrentOrder = createAction(\r\n  `${ActionPrefix.ORDERS}/clearCurrentOrder`\r\n);\r\n\r\nexport const fetchCurrentOrder = createAsyncThunk<\r\n  TOrder,\r\n  string,\r\n  {\r\n    rejectValue: void;\r\n    dispatch: AppDispatch;\r\n    extra: {\r\n      request: (endpoint: string) => Promise<TOrderResponse>;\r\n    };\r\n  }\r\n>(\r\n  `${ActionPrefix.ORDERS}/fetchCurrentOrder`,\r\n  async (orderNumber, { dispatch, rejectWithValue, extra: { request } }) => {\r\n    try {\r\n      const orderData = await request(`${ApiRoute.ORDERS}/${orderNumber}`);\r\n      const order = orderData.orders.find(\r\n        ({ number }) => number === Number(orderNumber)\r\n      );\r\n      return order ? order : null;\r\n    } catch {\r\n      dispatch(setError(true));\r\n      return rejectWithValue();\r\n    }\r\n  }\r\n);\r\n\r\n// Reducer\r\nconst initialState: IOrdersState = {\r\n  isLoading: false,\r\n  isConnected: false,\r\n  ordersData: null,\r\n  currentOrder: null,\r\n};\r\n\r\nconst reducer = createReducer(initialState, (builder) => {\r\n  builder.addCase(fetchCurrentOrder.pending, (state) => {\r\n    state.isLoading = true;\r\n  });\r\n  builder.addCase(fetchCurrentOrder.fulfilled, (state, { payload }) => {\r\n    state.isLoading = false;\r\n    state.currentOrder = payload;\r\n  });\r\n  builder.addCase(fetchCurrentOrder.rejected, () => initialState);\r\n  builder.addCase(clearCurrentOrder, (state) => {\r\n    state.currentOrder = null;\r\n  });\r\n  builder.addCase(wsConnectionSuccess, (state) => {\r\n    state.isConnected = true;\r\n  });\r\n  builder.addCase(wsConnectionError, () => initialState);\r\n  builder.addCase(wsConnectionClosed, () => initialState);\r\n  builder.addCase(wsGetMessage, (state, { payload }) => {\r\n    state.ordersData = payload;\r\n  });\r\n  builder.addDefaultCase((state) => state);\r\n});\r\n\r\n// Selectors\r\nconst populateIngredients = (\r\n  ingredientsIds: string[],\r\n  allIngredients: TIngredients\r\n) => {\r\n  const ingredientsList = ingredientsIds\r\n    .map((id) => allIngredients.find((ingredient) => ingredient._id === id))\r\n    .reduce((acc, ingredient) => {\r\n      const ingredientIndex = acc.findIndex(\r\n        (item) => item._id === ingredient._id\r\n      );\r\n\r\n      ingredientIndex === -1\r\n        ? acc.push({\r\n            ...ingredient,\r\n            quantity: ingredient.type === IngredientType.BUN ? 2 : 1,\r\n          })\r\n        : (acc[ingredientIndex].quantity += 1);\r\n      return acc;\r\n    }, [])\r\n    .sort((a, b) => a.quantity - b.quantity);\r\n\r\n  const bunIndex = ingredientsList.findIndex(\r\n    ({ type }) => type === IngredientType.BUN\r\n  );\r\n\r\n  return bunIndex !== -1\r\n    ? [\r\n        ingredientsList[bunIndex],\r\n        ...ingredientsList.slice(0, bunIndex),\r\n        ...ingredientsList.slice(bunIndex + 1),\r\n      ]\r\n    : ingredientsList;\r\n};\r\n\r\nconst calculateTotalPrice = (ingredients: TIngredients) => {\r\n  return ingredients.reduce((acc, { price, quantity }) => {\r\n    return (acc += price * quantity);\r\n  }, 0);\r\n};\r\n\r\nexport const getOrdersState = ({ orders }: RootState): IOrdersState => orders;\r\n\r\nexport const getAllOrders = createSelector(\r\n  [getOrdersState, getAllIngredients],\r\n  (ordersState, allIngredients) => {\r\n    const { ordersData } = ordersState;\r\n\r\n    if (!ordersData) return null;\r\n\r\n    const newOrders = ordersData.orders.map((order) => {\r\n      const populatedIngredients = populateIngredients(\r\n        order.ingredients,\r\n        allIngredients\r\n      );\r\n      return {\r\n        ...order,\r\n        ingredients: populatedIngredients,\r\n        totalPrice: calculateTotalPrice(populatedIngredients),\r\n      };\r\n    });\r\n\r\n    return { ...ordersData, orders: newOrders };\r\n  }\r\n);\r\n\r\nexport const getFilteredOrders = createSelector(\r\n  getOrdersState,\r\n  (ordersState) => {\r\n    const { ordersData } = ordersState;\r\n    if (!ordersData) return null;\r\n\r\n    const order = ordersData.orders.reduce<Record<string, number[]>>(\r\n      (acc, { status, number }) => {\r\n        acc[status] ? acc[status].push(number) : (acc[status] = [number]);\r\n        return acc;\r\n      },\r\n      {}\r\n    );\r\n\r\n    return Object.keys(order).reduce<Record<string, Array<number[]>>>(\r\n      (acc, key) => {\r\n        acc[key] = chunk(order[key], 10);\r\n        return acc;\r\n      },\r\n      {}\r\n    );\r\n  }\r\n);\r\n\r\nexport const getOrder = createSelector(\r\n  [getOrdersState, getAllIngredients],\r\n  (ordersState, allIngredients) => {\r\n    const { currentOrder } = ordersState;\r\n\r\n    if (!currentOrder) return null;\r\n\r\n    const populatedIngredients = populateIngredients(\r\n      currentOrder.ingredients,\r\n      allIngredients\r\n    );\r\n\r\n    return {\r\n      ...currentOrder,\r\n      ingredients: populatedIngredients,\r\n      totalPrice: calculateTotalPrice(populatedIngredients),\r\n    };\r\n  }\r\n);\r\n\r\nexport const wsAction = {\r\n  wsInitAllOrders,\r\n  wsInitUserOrders,\r\n  wsSendMessage: wsSendMessage,\r\n  onOpen: wsConnectionSuccess,\r\n  onClose: wsConnectionClosed,\r\n  onError: wsConnectionError,\r\n  onMessage: wsGetMessage,\r\n};\r\n\r\nexport default reducer;\r\n","import {\r\n  createReducer,\r\n  createAsyncThunk,\r\n  createAction,\r\n} from '@reduxjs/toolkit';\r\nimport { ApiRoute, ActionPrefix, Token } from '../../../utils/constants';\r\nimport { getToken, deleteToken, setToken } from '../../../utils/helpers';\r\nimport { RootState, AppDispatch } from '../../store';\r\nimport { wsAction } from '../orders/orders';\r\nimport { TApiOptions } from '../../../utils/prop-validator';\r\n\r\nexport interface IUserState {\r\n  userData: {\r\n    name: string;\r\n    email: string;\r\n  } | null;\r\n  isLoading: boolean;\r\n  isError: boolean;\r\n  success: boolean;\r\n}\r\n\r\ntype TFormData = {\r\n  name?: string;\r\n  email?: string;\r\n  password?: string;\r\n  token?: string;\r\n};\r\n\r\ntype TUserDataResponse = {\r\n  success: boolean;\r\n  accessToken: string;\r\n  refreshToken: string;\r\n  user: {\r\n    email: string;\r\n    name: string;\r\n  };\r\n};\r\n\r\ntype TUserData = {\r\n  email: string;\r\n  name: string;\r\n};\r\n\r\n// Actions\r\nexport const resetStatus = createAction(`${ActionPrefix.USER}/resetStatus`);\r\n\r\nexport const registerUser = createAsyncThunk<\r\n  TUserData,\r\n  TFormData,\r\n  {\r\n    rejectValue: void;\r\n    extra: {\r\n      request: (\r\n        enpoint: string,\r\n        options: TApiOptions\r\n      ) => Promise<TUserDataResponse>;\r\n    };\r\n  }\r\n>(\r\n  `${ActionPrefix.USER}/registerUser`,\r\n  async (formData, { rejectWithValue, extra: { request } }) => {\r\n    try {\r\n      const data = await request(ApiRoute.AUTH_REGISTRATION, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(formData),\r\n      });\r\n      const { accessToken, refreshToken, user } = data;\r\n      setToken(Token.ACCESS_TOKEN, accessToken);\r\n      setToken(Token.REFRESH_TOKEN, refreshToken);\r\n      return user;\r\n    } catch {\r\n      return rejectWithValue();\r\n    }\r\n  }\r\n);\r\n\r\nexport const loginUser = createAsyncThunk<\r\n  TUserData,\r\n  TFormData,\r\n  {\r\n    rejectValue: void;\r\n    extra: {\r\n      request: (\r\n        enpoint: string,\r\n        options: TApiOptions\r\n      ) => Promise<TUserDataResponse>;\r\n    };\r\n  }\r\n>(\r\n  `${ActionPrefix.USER}/loginUser`,\r\n  async (formData, { rejectWithValue, extra: { request } }) => {\r\n    try {\r\n      const data = await request(ApiRoute.AUTH_LOGIN, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(formData),\r\n      });\r\n      const { accessToken, refreshToken, user } = data;\r\n      setToken(Token.ACCESS_TOKEN, accessToken);\r\n      setToken(Token.REFRESH_TOKEN, refreshToken);\r\n      return user;\r\n    } catch {\r\n      return rejectWithValue();\r\n    }\r\n  }\r\n);\r\n\r\nexport const sendUserEmailToResetPassword = createAsyncThunk<\r\n  void,\r\n  TFormData,\r\n  {\r\n    rejectValue: void;\r\n    extra: {\r\n      request: (enpoint: string, options: TApiOptions) => void;\r\n    };\r\n  }\r\n>(\r\n  `${ActionPrefix.USER}/sendUserEmailToResetPassword`,\r\n  async (formData, { rejectWithValue, extra: { request } }) => {\r\n    try {\r\n      await request(ApiRoute.PASSWORD_RESET, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(formData),\r\n      });\r\n    } catch {\r\n      return rejectWithValue();\r\n    }\r\n  }\r\n);\r\n\r\nexport const resetPassword = createAsyncThunk<\r\n  void,\r\n  TFormData,\r\n  {\r\n    rejectValue: void;\r\n    extra: {\r\n      request: (enpoint: string, options: TApiOptions) => void;\r\n    };\r\n  }\r\n>(\r\n  `${ActionPrefix.USER}/resetPassword`,\r\n  async (formData, { rejectWithValue, extra: { request } }) => {\r\n    try {\r\n      await request(ApiRoute.PASSWORD_RESET_RESET, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(formData),\r\n      });\r\n    } catch {\r\n      return rejectWithValue();\r\n    }\r\n  }\r\n);\r\n\r\nexport const logoutUser = createAsyncThunk<\r\n  void,\r\n  void,\r\n  {\r\n    rejectValue: void;\r\n    extra: {\r\n      request: (enpoint: string, options: TApiOptions) => void;\r\n    };\r\n  }\r\n>(\r\n  `${ActionPrefix.USER}/logoutUser`,\r\n  async (_, { rejectWithValue, extra: { request } }) => {\r\n    const refreshToken = getToken(Token.REFRESH_TOKEN);\r\n    try {\r\n      await request(ApiRoute.AUTH_LOGOUT, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ token: refreshToken }),\r\n      });\r\n      deleteToken(Token.REFRESH_TOKEN);\r\n      deleteToken(Token.ACCESS_TOKEN);\r\n    } catch {\r\n      return rejectWithValue();\r\n    }\r\n  }\r\n);\r\n\r\nexport const refreshUserToken = createAsyncThunk<\r\n  void,\r\n  any,\r\n  {\r\n    rejectValue: void;\r\n    dispatch: AppDispatch;\r\n    extra: {\r\n      request: (\r\n        endpoint: string,\r\n        options: TApiOptions\r\n      ) => Promise<{ accessToken: string; refreshToken: string }>;\r\n    };\r\n  }\r\n>(\r\n  `${ActionPrefix.USER}/refreshUserToken`,\r\n  async (asyncAction, { rejectWithValue, dispatch, extra: { request } }) => {\r\n    const token = getToken(Token.REFRESH_TOKEN);\r\n    try {\r\n      const { accessToken, refreshToken } = await request(ApiRoute.AUTH_TOKEN, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ token: token }),\r\n      });\r\n      setToken(Token.ACCESS_TOKEN, accessToken);\r\n      setToken(Token.REFRESH_TOKEN, refreshToken);\r\n      await dispatch(asyncAction());\r\n    } catch (err) {\r\n      deleteToken(Token.ACCESS_TOKEN);\r\n      deleteToken(Token.REFRESH_TOKEN);\r\n      return rejectWithValue();\r\n    }\r\n  }\r\n);\r\n\r\nexport const fetchUserData = createAsyncThunk<\r\n  TUserData,\r\n  void,\r\n  {\r\n    rejectValue: void;\r\n    dispatch: AppDispatch;\r\n    extra: {\r\n      request: (\r\n        endpoint: string,\r\n        options: TApiOptions\r\n      ) => Promise<{ user: TUserData }>;\r\n    };\r\n  }\r\n>(\r\n  `${ActionPrefix.USER}/fetchUserData`,\r\n  async (_, { rejectWithValue, dispatch, extra: { request } }) => {\r\n    const accessToken = getToken(Token.ACCESS_TOKEN);\r\n\r\n    try {\r\n      const { user } = await request(ApiRoute.AUTH_USER, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `${accessToken}`,\r\n        },\r\n      });\r\n      dispatch(wsAction.wsInitUserOrders());\r\n      return user;\r\n    } catch (err: any) {\r\n      if (err.message) {\r\n        dispatch(refreshUserToken(fetchUserData));\r\n        return rejectWithValue();\r\n      }\r\n      return rejectWithValue();\r\n    }\r\n  }\r\n);\r\n\r\nexport const updateUserData = createAsyncThunk<\r\n  TUserData,\r\n  TFormData,\r\n  {\r\n    rejectValue: void;\r\n    dispatch: AppDispatch;\r\n    extra: {\r\n      request: (\r\n        endpoint: string,\r\n        options: TApiOptions\r\n      ) => Promise<{ user: TUserData }>;\r\n    };\r\n  }\r\n>(\r\n  `${ActionPrefix.USER}/updateUserData`,\r\n  async (formData, { rejectWithValue, dispatch, extra: { request } }) => {\r\n    const accessToken = getToken(Token.ACCESS_TOKEN);\r\n    try {\r\n      const { user } = await request(ApiRoute.AUTH_USER, {\r\n        method: 'PATCH',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: accessToken,\r\n        },\r\n        body: JSON.stringify(formData),\r\n      });\r\n      return user;\r\n    } catch (err: any) {\r\n      if (err.message) {\r\n        dispatch(refreshUserToken(() => updateUserData(formData)));\r\n        return rejectWithValue();\r\n      }\r\n      return rejectWithValue();\r\n    }\r\n  }\r\n);\r\n\r\n// Reducer\r\nconst initialState: IUserState = {\r\n  userData: null,\r\n  isLoading: false,\r\n  isError: false,\r\n  success: false,\r\n};\r\n\r\nconst reducer = createReducer(initialState, (builder) => {\r\n  // registerUser action\r\n  builder.addCase(registerUser.pending, (state) => {\r\n    state.isLoading = true;\r\n    state.isError = false;\r\n  });\r\n  builder.addCase(registerUser.fulfilled, (state, { payload }) => {\r\n    state.isLoading = false;\r\n    state.success = true;\r\n    state.userData = payload;\r\n  });\r\n  builder.addCase(registerUser.rejected, (state) => {\r\n    state.isLoading = false;\r\n    state.isError = true;\r\n    state.success = false;\r\n    state.userData = null;\r\n  });\r\n  // loginUser action\r\n  builder.addCase(loginUser.pending, (state) => {\r\n    state.isLoading = true;\r\n    state.isError = false;\r\n  });\r\n  builder.addCase(loginUser.fulfilled, (state, { payload }) => {\r\n    state.isLoading = false;\r\n    state.success = true;\r\n    state.userData = payload;\r\n  });\r\n  builder.addCase(loginUser.rejected, (state) => {\r\n    state.isLoading = false;\r\n    state.isError = true;\r\n    state.success = false;\r\n    state.userData = null;\r\n  });\r\n  // sendUserEmailToResetPassword action\r\n  builder.addCase(sendUserEmailToResetPassword.pending, (state) => {\r\n    state.isLoading = true;\r\n    state.isError = false;\r\n  });\r\n  builder.addCase(sendUserEmailToResetPassword.fulfilled, (state) => {\r\n    state.isLoading = false;\r\n    state.success = true;\r\n  });\r\n  builder.addCase(sendUserEmailToResetPassword.rejected, (state) => {\r\n    state.isLoading = false;\r\n    state.isError = true;\r\n    state.success = false;\r\n  });\r\n  // resetPassword action\r\n  builder.addCase(resetPassword.pending, (state) => {\r\n    state.isLoading = true;\r\n    state.isError = false;\r\n  });\r\n  builder.addCase(resetPassword.fulfilled, (state) => {\r\n    state.isLoading = false;\r\n    state.success = true;\r\n  });\r\n  builder.addCase(resetPassword.rejected, (state) => {\r\n    state.isLoading = false;\r\n    state.isError = true;\r\n    state.success = false;\r\n  });\r\n  // logoutUser action\r\n  builder.addCase(logoutUser.fulfilled, () => initialState);\r\n  // fetchUserData action\r\n  builder.addCase(fetchUserData.pending, (state) => {\r\n    state.success = false;\r\n  });\r\n  builder.addCase(fetchUserData.fulfilled, (state, { payload }) => {\r\n    state.userData = payload;\r\n    state.success = true;\r\n  });\r\n  builder.addCase(fetchUserData.rejected, (state) => {\r\n    state.userData = null;\r\n    state.success = false;\r\n  });\r\n  // refreshUserToken action\r\n  builder.addCase(refreshUserToken.rejected, (state) => {\r\n    state.success = false;\r\n    state.isError = true;\r\n  });\r\n  // updateUserData action\r\n  builder.addCase(updateUserData.pending, (state) => {\r\n    state.success = false;\r\n  });\r\n  builder.addCase(updateUserData.fulfilled, (state, { payload }) => {\r\n    state.userData = payload;\r\n    state.success = true;\r\n  });\r\n  builder.addCase(updateUserData.rejected, (state) => {\r\n    state.userData = null;\r\n    state.success = false;\r\n  });\r\n  // resetStatus action\r\n  builder.addCase(resetStatus, (state) => {\r\n    state.success = false;\r\n    state.isError = false;\r\n  });\r\n  builder.addDefaultCase((state) => state);\r\n});\r\n\r\n// Selectors\r\nexport const getUserState = ({ user }: RootState): IUserState => user;\r\n\r\nexport default reducer;\r\n","import {\r\n  createReducer,\r\n  createAsyncThunk,\r\n  createAction,\r\n} from '@reduxjs/toolkit';\r\nimport { ApiRoute, Token } from '../../../utils/constants';\r\nimport { refreshUserToken } from '../user/user';\r\nimport { ActionPrefix } from '../../../utils/constants';\r\nimport { getToken } from '../../../utils/helpers';\r\nimport { RootState, AppDispatch } from '../../store';\r\nimport { TApiOptions } from '../../../utils/prop-validator';\r\n\r\nexport interface IOrderState {\r\n  orderNumber: number | null;\r\n  isLoading: boolean;\r\n}\r\n\r\n// Actions\r\nexport const resetOrder = createAction(`${ActionPrefix.ORDER}/resetOrder`);\r\n\r\nexport const sendOrder = createAsyncThunk<\r\n  number,\r\n  Array<string>,\r\n  {\r\n    rejectValue: void;\r\n    dispatch: AppDispatch;\r\n    extra: {\r\n      request: (\r\n        endpoint: string,\r\n        options: TApiOptions\r\n      ) => Promise<{ order: { number: number } }>;\r\n    };\r\n  }\r\n>(\r\n  `${ActionPrefix.ORDER}/sendOrder`,\r\n  async (ingredientsIds, { dispatch, rejectWithValue, extra: { request } }) => {\r\n    const accessToken = getToken(Token.ACCESS_TOKEN);\r\n    try {\r\n      const {\r\n        order: { number },\r\n      } = await request(ApiRoute.ORDERS, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: accessToken,\r\n        },\r\n        body: JSON.stringify({ ingredients: ingredientsIds }),\r\n      });\r\n      return number;\r\n    } catch (err: any) {\r\n      if (err.message) {\r\n        dispatch(refreshUserToken(() => sendOrder(ingredientsIds)));\r\n        return rejectWithValue();\r\n      }\r\n      return rejectWithValue();\r\n    }\r\n  }\r\n);\r\n\r\n// Reducer\r\nconst initialState: IOrderState = {\r\n  orderNumber: null,\r\n  isLoading: false,\r\n};\r\n\r\nconst reducer = createReducer(initialState, (builder) => {\r\n  builder\r\n    .addCase(sendOrder.pending, (state) => {\r\n      state.isLoading = true;\r\n    })\r\n    .addCase(sendOrder.fulfilled, (state, { payload }) => {\r\n      state.orderNumber = payload;\r\n      state.isLoading = false;\r\n    })\r\n    .addCase(sendOrder.rejected, () => initialState)\r\n    .addCase(resetOrder, (state) => {\r\n      state.orderNumber = null;\r\n    })\r\n    .addDefaultCase((state) => state);\r\n});\r\n\r\n// Selectors\r\nexport const getOrderState = ({ order }: RootState): IOrderState => order;\r\n\r\nexport default reducer;\r\n","import appReducer from './app/app';\r\nimport ingredientsReducer from './ingredients/ingredients';\r\nimport burderIngredientsReducer from './burger-ingredients/burger-ingredients';\r\nimport orderReducer from './order/order';\r\nimport userReducer from './user/user';\r\nimport ordersReducer from './orders/orders';\r\n\r\nconst rootReducer = {\r\n  app: appReducer,\r\n  ingredients: ingredientsReducer,\r\n  burgerIngredients: burderIngredientsReducer,\r\n  order: orderReducer,\r\n  orders: ordersReducer,\r\n  user: userReducer,\r\n};\r\n\r\nexport default rootReducer;\r\n","import { TApiOptions } from './prop-validator';\r\nexport const ENDPOINT = 'https://norma.nomoreparties.space/api';\r\nconst REQUEST_ERRORS = [400, 500];\r\n\r\nconst controller = new AbortController();\r\nconst timeoutId = setTimeout(() => controller.abort(), 5000);\r\n\r\nconst createRequest = (onRequestFail: () => void) => {\r\n  return async <T>(url: string, options: TApiOptions = null): Promise<T> => {\r\n    try {\r\n      const response = await fetch(`${ENDPOINT}/${url}`, {\r\n        ...options,\r\n        signal: controller.signal,\r\n      });\r\n      clearTimeout(timeoutId);\r\n\r\n      const isJsonResponse = response.headers\r\n        .get('content-type')\r\n        ?.includes('application/json');\r\n      const data = isJsonResponse ? await response.json() : null;\r\n\r\n      if (!response.ok) {\r\n        if (REQUEST_ERRORS.includes(response.status)) {\r\n          onRequestFail();\r\n        }\r\n        if (data) {\r\n          return Promise.reject(data);\r\n        }\r\n        throw new Error();\r\n      }\r\n\r\n      return data;\r\n    } catch (error) {\r\n      throw new Error();\r\n    }\r\n  };\r\n};\r\n\r\nexport default createRequest;\r\n","import {\r\n  configureStore,\r\n  ActionCreator,\r\n  AnyAction,\r\n  ThunkAction,\r\n} from '@reduxjs/toolkit';\r\nimport rootReducer from './ducks';\r\nimport createRequest from '../utils/api';\r\nimport { setError } from './ducks/app/app';\r\nimport { socketMiddleware } from './socketMiddleware';\r\nimport { wsAction } from './ducks/orders/orders';\r\n\r\nconst wsEndpoint = 'wss://norma.nomoreparties.space/orders';\r\n\r\nconst onRequestFail = () => {\r\n  store.dispatch(setError(true));\r\n};\r\n\r\nconst request = createRequest(onRequestFail);\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      thunk: {\r\n        extraArgument: { request },\r\n      },\r\n    }).concat(socketMiddleware(wsEndpoint, wsAction)),\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n});\r\n\r\nexport type AppThunk<TReturn = void | Promise<Response>> = ActionCreator<\r\n  ThunkAction<TReturn, RootState, unknown, AnyAction>\r\n>;\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n","import {\r\n  AnyAction,\r\n  MiddlewareAPI,\r\n  Middleware,\r\n  ActionCreatorWithoutPayload,\r\n  ActionCreatorWithPayload,\r\n} from '@reduxjs/toolkit';\r\nimport { Token } from '../utils/constants';\r\nimport { getToken } from '../utils/helpers';\r\nimport { TOrderResponse } from '../utils/prop-validator';\r\nimport { setError } from './ducks/app/app';\r\nimport { AppDispatch, RootState } from './store';\r\n\r\ntype TSocketActions = {\r\n  wsInitAllOrders: ActionCreatorWithoutPayload;\r\n  wsInitUserOrders: ActionCreatorWithoutPayload;\r\n  wsSendMessage: ActionCreatorWithoutPayload;\r\n  onOpen: ActionCreatorWithoutPayload;\r\n  onClose: ActionCreatorWithoutPayload;\r\n  onError: ActionCreatorWithoutPayload;\r\n  onMessage: ActionCreatorWithPayload<TOrderResponse>;\r\n};\r\n\r\nexport const socketMiddleware = (\r\n  wsUrl: string,\r\n  wsActions: TSocketActions\r\n): Middleware => {\r\n  return (store: MiddlewareAPI<AppDispatch, RootState>) => {\r\n    let socket: WebSocket | null = null;\r\n\r\n    return (next) => (action: AnyAction) => {\r\n      const { dispatch } = store;\r\n      const { type, payload } = action;\r\n      const {\r\n        wsInitAllOrders,\r\n        wsInitUserOrders,\r\n        wsSendMessage,\r\n        onOpen,\r\n        onClose,\r\n        onError,\r\n        onMessage,\r\n      } = wsActions;\r\n\r\n      if (type === wsInitAllOrders.toString()) {\r\n        socket = new WebSocket(`${wsUrl}/all`);\r\n      }\r\n\r\n      if (type === wsInitUserOrders.toString()) {\r\n        const token = getToken(Token.ACCESS_TOKEN).split(' ')[1];\r\n        socket = new WebSocket(`${wsUrl}?token=${token}`);\r\n      }\r\n\r\n      if (socket) {\r\n        socket.onopen = () => {\r\n          dispatch(onOpen());\r\n        };\r\n\r\n        socket.onerror = () => {\r\n          dispatch(onError());\r\n          dispatch(setError(true));\r\n        };\r\n\r\n        socket.onmessage = (event) => {\r\n          const parsedData = JSON.parse(event.data);\r\n          const { success, ...ordersData } = parsedData;\r\n          dispatch(onMessage(ordersData));\r\n        };\r\n\r\n        socket.onclose = () => {\r\n          // eslint-disable-next-line no-console\r\n          console.log('Соединение закрыто');\r\n        };\r\n\r\n        if (type === onClose.toString()) {\r\n          socket.close();\r\n        }\r\n\r\n        if (type === wsSendMessage.toString()) {\r\n          const data = { ...payload };\r\n          socket.send(JSON.stringify(data));\r\n        }\r\n      }\r\n\r\n      next(action);\r\n    };\r\n  };\r\n};\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport type { RootState, AppDispatch, AppThunk } from './store';\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch | AppThunk>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import { FC, memo } from 'react';\r\nimport { NavLink, Link } from 'react-router-dom';\r\nimport {\r\n  Logo,\r\n  BurgerIcon,\r\n  ListIcon,\r\n  ProfileIcon,\r\n} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport s from './app-header.module.css';\r\nimport { RoutePath } from '../../utils/constants';\r\n\r\nconst AppHeader: FC = () => {\r\n  return (\r\n    <header className={s.header}>\r\n      <nav className={s.mainNav}>\r\n        <NavLink\r\n          to={RoutePath.HOME}\r\n          className={s.navItem}\r\n          activeClassName={s.navItemActive}\r\n          exact\r\n        >\r\n          <BurgerIcon type=\"primary\" />\r\n          <span className=\"text text_type_main-default ml-2\">Конструктор</span>\r\n        </NavLink>\r\n        <NavLink\r\n          to={RoutePath.FEED}\r\n          className={s.navItem}\r\n          activeClassName={s.navItemActive}\r\n        >\r\n          <ListIcon type=\"primary\" />\r\n          <span className=\"text text_type_main-default ml-2\">\r\n            Лента заказов\r\n          </span>\r\n        </NavLink>\r\n        <Link to={RoutePath.HOME} className={s.logo}>\r\n          <Logo />\r\n        </Link>\r\n        <NavLink\r\n          to={RoutePath.PROFILE}\r\n          className={s.navItem}\r\n          activeClassName={s.navItemActive}\r\n        >\r\n          <ProfileIcon type=\"primary\" />\r\n          <span className=\"text text_type_main-default ml-2\">\r\n            Личный кабинет\r\n          </span>\r\n        </NavLink>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default memo(AppHeader);\r\n","import { FC } from 'react';\r\nimport s from './layout.module.css';\r\n\r\n// Components\r\nimport AppHeader from '../app-header/app-header';\r\n\r\nconst Layout: FC = ({ children }) => {\r\n  return (\r\n    <>\r\n      <AppHeader />\r\n      <main className={s.mainContainer}>{children}</main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import { FC } from 'react';\r\nimport { Logo } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport s from './loader.module.css';\r\n\r\nconst Loader: FC = () => {\r\n  return (\r\n    <div className={s.loaderWrapper}>\r\n      <div className={s.logoContainer}>\r\n        <Logo />\r\n        <div className={s.spinner}>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import { FC } from 'react';\r\nimport s from './error.module.css';\r\nimport {\r\n  InfoIcon,\r\n  Button,\r\n} from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\nconst Error: FC = ({ children }) => {\r\n  const handleReload = (): void => {\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <div className={s.errorWrapper}>\r\n      <div className={s.errorContainer}>\r\n        <InfoIcon type=\"primary\" />\r\n        <h1 className=\"text text_type_main-large mb-10\">{children}</h1>\r\n        <Button type=\"primary\" size=\"large\" onClick={handleReload}>\r\n          Перезагрузить\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","import { forwardRef, ReactNode, SyntheticEvent } from 'react';\r\nimport s from './modal-overlay.module.css';\r\n\r\ntype TComponentProps = {\r\n  children: ReactNode;\r\n  onCloseModal: (e: SyntheticEvent) => void;\r\n};\r\n\r\nconst ModalOverlay = forwardRef<HTMLDivElement, TComponentProps>(\r\n  ({ onCloseModal, children }, ref) => {\r\n    return (\r\n      <div ref={ref} className={s.modalOverlay} onClick={onCloseModal}>\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default ModalOverlay;\r\n","import { useRef, useEffect, useCallback, FC } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport cn from 'classnames';\r\nimport s from './modal.module.css';\r\nimport { CloseIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\n// Components\r\nimport ModalOverlay from '../modal-overlay/modal-overlay';\r\n\r\ntype TComponentProps = {\r\n  title?: string;\r\n  isTitled?: boolean;\r\n  titleClasses?: string;\r\n  handleCloseModal: () => void;\r\n};\r\n\r\nconst Modal: FC<TComponentProps> = ({\r\n  title,\r\n  isTitled,\r\n  titleClasses,\r\n  handleCloseModal,\r\n  children,\r\n}) => {\r\n  const modalOverlayRef = useRef<HTMLDivElement>(null);\r\n  const modalRoot = document.getElementById('react-modals') as Element;\r\n\r\n  const onCloseModal = useCallback(\r\n    (e) => {\r\n      const escKeyCode = 27;\r\n      if (e.target === modalOverlayRef.current || e.keyCode === escKeyCode) {\r\n        handleCloseModal();\r\n      }\r\n    },\r\n    [handleCloseModal]\r\n  );\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('keydown', onCloseModal);\r\n\r\n    return () => {\r\n      document.removeEventListener('keydown', onCloseModal);\r\n    };\r\n  }, [onCloseModal]);\r\n\r\n  return modalRoot\r\n    ? ReactDOM.createPortal(\r\n        <ModalOverlay ref={modalOverlayRef} onCloseModal={onCloseModal}>\r\n          <div\r\n            className={isTitled ? s.modalContainer : s.modalContainerNoTitle}\r\n          >\r\n            {isTitled ? (\r\n              <h2 className={cn(s.modalTitle, titleClasses)}>\r\n                {title}\r\n                <CloseIcon type=\"primary\" onClick={handleCloseModal} />\r\n              </h2>\r\n            ) : (\r\n              <CloseIcon type=\"primary\" onClick={handleCloseModal} />\r\n            )}\r\n            {children}\r\n          </div>\r\n        </ModalOverlay>,\r\n        modalRoot\r\n      )\r\n    : null;\r\n};\r\n\r\nexport default Modal;\r\n","import { FC } from 'react';\r\nimport { TIngredient } from '../../utils/prop-validator';\r\nimport cn from 'classnames';\r\nimport s from './ingredient-details.module.css';\r\n\r\ntype TComponentProps = {\r\n  ingredient: TIngredient;\r\n};\r\n\r\nconst IngredientDetails: FC<TComponentProps> = ({ ingredient }) => {\r\n  const { image_large, name, calories, fat, proteins, carbohydrates } =\r\n    ingredient;\r\n\r\n  const energyValues = [\r\n    {\r\n      title: 'Калории,ккал',\r\n      value: calories,\r\n    },\r\n    {\r\n      title: 'Белки,г',\r\n      value: proteins,\r\n    },\r\n    {\r\n      title: 'Жиры,г',\r\n      value: fat,\r\n    },\r\n    {\r\n      title: 'Углеводы,г',\r\n      value: carbohydrates,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className={s.container}>\r\n      <img src={image_large} alt={name} className=\"mb-4\" />\r\n      <p className={cn(s.name, 'text', 'text_type_main-medium')}>{name}</p>\r\n      <section className={s.energyValueBlock}>\r\n        {energyValues.map(({ title, value }, index) => (\r\n          <div className={cn(s.valueItem, 'text_color_inactive')} key={index}>\r\n            <span className=\"text text_type_main-default mb-2\">{title}</span>\r\n            <span className=\"text text_type_digits-default\">{value}</span>\r\n          </div>\r\n        ))}\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IngredientDetails;\r\n","import { FC } from 'react';\r\nimport cn from 'classnames';\r\nimport s from './order-info.module.css';\r\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { OrderStatus } from '../../utils/constants';\r\nimport { generateDate, getOrderStatus } from '../../utils/helpers';\r\nimport { TOrderPopulated } from '../../utils/prop-validator';\r\n\r\ntype TComponentProps = {\r\n  order: TOrderPopulated;\r\n};\r\n\r\nconst OrderInfo: FC<TComponentProps> = ({ order }) => {\r\n  const { createdAt, name, status, ingredients, totalPrice } = order;\r\n\r\n  return (\r\n    <div className={s.container}>\r\n      <section className={s.orderBlock}>\r\n        <h2 className=\"text text_type_main-medium mb-3\">{name}</h2>\r\n        <p\r\n          className={cn(\r\n            { [s.readyStatus]: status === OrderStatus.done },\r\n            'text',\r\n            'text_type_main-default',\r\n            'mb-15'\r\n          )}\r\n        >\r\n          {getOrderStatus(status)}\r\n        </p>\r\n        <div className={s.ingredientsBlock}>\r\n          <h2 className=\"text text_type_main-medium mb-6\">Состав:</h2>\r\n          <div\r\n            className={cn(s.ingredientsList, {\r\n              'pr-6': ingredients.length > 4,\r\n            })}\r\n          >\r\n            {ingredients.map(({ _id, name, image_mobile, price, quantity }) => (\r\n              <div key={_id} className={s.ingredient}>\r\n                <div className={s.image}>\r\n                  <img src={image_mobile} alt={name} />\r\n                </div>\r\n                <p className={`${s.name} text text_type_main-default`}>\r\n                  {name}\r\n                </p>\r\n                <p className={`${s.quantity} text text_type_digits-default`}>\r\n                  {quantity} x {price} <CurrencyIcon type=\"primary\" />\r\n                </p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className={s.orderInfo}>\r\n          <span className=\"text text_type_main-default text_color_inactive\">\r\n            {generateDate(createdAt)}\r\n          </span>\r\n          <span className={s.totalPrice}>\r\n            <span className=\"text text_type_digits-default\">{totalPrice}</span>\r\n            <CurrencyIcon type=\"primary\" />\r\n          </span>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderInfo;\r\n","import { FC } from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { RoutePath } from '../../utils/constants';\r\nimport { checkAuth } from '../../utils/helpers';\r\n\r\ntype TComponentProps = {\r\n  path: string | string[];\r\n  exact?: boolean;\r\n};\r\n\r\nconst ProtectedRoute: FC<TComponentProps> = ({ children, ...rest }) => {\r\n  const isAuth = checkAuth();\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) => {\r\n        return isAuth ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: RoutePath.LOGIN,\r\n              state: { from: location },\r\n            }}\r\n          />\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import { FC } from 'react';\r\nimport s from './ingredients-tabs.module.css';\r\nimport { TAB_ITEMS } from '../../utils/constants';\r\n\r\n// Components\r\nimport { Tab } from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\ntype TComponentProps = {\r\n  activeTab: string;\r\n  setIsScrollMethod: (isScrollMethod: boolean) => void;\r\n  setActiveTab: (type: string) => void;\r\n};\r\n\r\nconst IngredientsTabs: FC<TComponentProps> = ({\r\n  activeTab,\r\n  setIsScrollMethod,\r\n  setActiveTab,\r\n}) => {\r\n  return (\r\n    <div className={s.tabsBlock}>\r\n      {TAB_ITEMS.map(({ name, type }) => (\r\n        <Tab\r\n          key={type}\r\n          value={name}\r\n          active={activeTab === type}\r\n          onClick={() => {\r\n            setActiveTab(type);\r\n            setIsScrollMethod(false);\r\n          }}\r\n        >\r\n          {name}\r\n        </Tab>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IngredientsTabs;\r\n","import { memo, FC } from 'react';\r\nimport { useDrag } from 'react-dnd';\r\nimport {\r\n  CurrencyIcon,\r\n  Counter,\r\n} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport cn from 'classnames';\r\nimport { TIngredient } from '../../utils/prop-validator';\r\nimport s from './ingredient-item.module.css';\r\n\r\ntype TCopmonentProps = {\r\n  ingredient: TIngredient;\r\n  quantity: number;\r\n  handleClickIngredientItem: (ingredient: TIngredient) => void;\r\n};\r\n\r\nconst IngredientItem: FC<TCopmonentProps> = ({\r\n  ingredient,\r\n  quantity,\r\n  handleClickIngredientItem,\r\n}) => {\r\n  const [{ isDrag }, dragRef] = useDrag({\r\n    type: 'ingredient',\r\n    item: ingredient,\r\n    collect: (monitor) => ({\r\n      isDrag: monitor.isDragging(),\r\n    }),\r\n  });\r\n  const { name, image, price } = ingredient;\r\n\r\n  return (\r\n    <li\r\n      ref={dragRef}\r\n      className={cn(s.ingredientItem, { [s.draggableIngredientItem]: isDrag })}\r\n      onClick={() => handleClickIngredientItem(ingredient)}\r\n    >\r\n      <img className={s.image} src={image} alt={name} />\r\n      <p className={cn(s.price, 'text', 'text_type_digits-default')}>\r\n        {price}&nbsp;\r\n        <CurrencyIcon type=\"primary\" />\r\n      </p>\r\n      <p className={cn(s.name, 'text', 'text_type_main-default')}>{name}</p>\r\n      {quantity > 0 && <Counter count={quantity} size=\"default\" />}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default memo(IngredientItem);\r\n","import { useCallback, forwardRef } from 'react';\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { TIngredients } from '../../utils/prop-validator';\r\nimport s from './ingredients-list.module.css';\r\nimport { getBurgerIgredientsIdsCount } from '../../services/ducks/burger-ingredients/burger-ingredients';\r\nimport { RoutePath } from '../../utils/constants';\r\n\r\n// Components\r\nimport IngredientItem from '../ingredient-item/ingredient-item';\r\n\r\ntype TComponentProps = {\r\n  title: string;\r\n  ingredients: TIngredients;\r\n};\r\n\r\nconst IngredientsList = forwardRef<HTMLHeadingElement, TComponentProps>(\r\n  ({ title, ingredients }, ref) => {\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const burgerIngredientId = useSelector(getBurgerIgredientsIdsCount);\r\n\r\n    const handleClickIngredientItem = useCallback(\r\n      (ingredient) => {\r\n        history.push({\r\n          pathname: RoutePath.INGREDIENT(ingredient._id),\r\n          state: { modalLocation: location, currentIngredient: ingredient },\r\n        });\r\n      },\r\n      [history, location]\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <h2 className=\"text text_type_main-medium\" ref={ref}>\r\n          {title}\r\n        </h2>\r\n        <ul className={s.ingredientList}>\r\n          {ingredients.map((ingredient) => (\r\n            <IngredientItem\r\n              key={ingredient._id}\r\n              ingredient={ingredient}\r\n              quantity={burgerIngredientId[ingredient._id] || 0}\r\n              handleClickIngredientItem={handleClickIngredientItem}\r\n            />\r\n          ))}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nexport default IngredientsList;\r\n","import {\r\n  useRef,\r\n  useMemo,\r\n  useEffect,\r\n  createRef,\r\n  FC,\r\n  Ref,\r\n  RefObject,\r\n} from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport s from './ingredients-list-container.module.css';\r\nimport { TAB_ITEMS } from '../../utils/constants';\r\nimport { getFilteredIngredients } from '../../services/ducks/ingredients/ingredients';\r\n\r\n// Components\r\nimport IngredientsList from '../ingredients-list/ingredients-list';\r\n\r\ntype TComponentProps = {\r\n  isScrollMethod: boolean;\r\n  activeTab: string;\r\n  setIsScrollMethod: (IsScrollMethod: boolean) => void;\r\n  setActiveTab: (activeTab: string) => void;\r\n};\r\n\r\ntype TScrollElement = {\r\n  type: string;\r\n  distance: number;\r\n};\r\n\r\ntype TRefKeys = {\r\n  [key: string]: Ref<HTMLHeadingElement>;\r\n};\r\n\r\nconst IngredientsListContainer: FC<TComponentProps> = ({\r\n  isScrollMethod,\r\n  activeTab,\r\n  setIsScrollMethod,\r\n  setActiveTab,\r\n}) => {\r\n  const filteredIngredients = useSelector(getFilteredIngredients);\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const ingredientsTitleRef = useMemo(() => {\r\n    return TAB_ITEMS.reduce<\r\n      Record<keyof TRefKeys, RefObject<HTMLHeadingElement>>\r\n    >((acc, { type }) => {\r\n      acc[type] = createRef();\r\n      return acc;\r\n    }, {});\r\n  }, []);\r\n\r\n  const handleScroll = () => {\r\n    const [nearestTitle] = TAB_ITEMS.reduce<TScrollElement[]>(\r\n      (acc, { type }) => {\r\n        acc.push({\r\n          type,\r\n          distance: Math.abs(\r\n            containerRef.current.getBoundingClientRect().top -\r\n              ingredientsTitleRef[type].current.getBoundingClientRect().top\r\n          ),\r\n        });\r\n        return acc;\r\n      },\r\n      []\r\n    ).sort((a, b) => a.distance - b.distance);\r\n\r\n    if (activeTab !== nearestTitle.type) {\r\n      setActiveTab(nearestTitle.type);\r\n      setIsScrollMethod(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isScrollMethod) {\r\n      ingredientsTitleRef[activeTab].current.scrollIntoView();\r\n    }\r\n  }, [activeTab, ingredientsTitleRef, isScrollMethod]);\r\n\r\n  return (\r\n    <div\r\n      className={s.ingredientsContainer}\r\n      ref={containerRef}\r\n      onScroll={handleScroll}\r\n    >\r\n      {useMemo(\r\n        () =>\r\n          TAB_ITEMS.map(({ name, type }) => (\r\n            <IngredientsList\r\n              key={type}\r\n              ref={ingredientsTitleRef[type]}\r\n              title={name}\r\n              ingredients={filteredIngredients[type]}\r\n            />\r\n          )),\r\n        [filteredIngredients, ingredientsTitleRef]\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IngredientsListContainer;\r\n","import { useState, FC } from 'react';\r\nimport s from './burger-ingredients.module.css';\r\nimport { IngredientType } from '../../utils/constants';\r\n\r\n// Components\r\nimport IngredientsTabs from '../ingredients-tabs/ingredients-tabs';\r\nimport IngredientsListContainer from '../ingredients-list-container/ingredients-list-container';\r\n\r\nconst BurgerIngredients: FC = () => {\r\n  const [activeTab, setActiveTab] = useState<string>(IngredientType.BUN);\r\n  const [isScrollMethod, setIsScrollMethod] = useState<boolean>(true);\r\n\r\n  return (\r\n    <section className={s.burgerIngredientsSection}>\r\n      <h1 className=\"text text_type_main-large mb-5\">Соберите бургер</h1>\r\n      <IngredientsTabs\r\n        activeTab={activeTab}\r\n        setIsScrollMethod={setIsScrollMethod}\r\n        setActiveTab={setActiveTab}\r\n      />\r\n      <IngredientsListContainer\r\n        activeTab={activeTab}\r\n        isScrollMethod={isScrollMethod}\r\n        setIsScrollMethod={setIsScrollMethod}\r\n        setActiveTab={setActiveTab}\r\n      />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default BurgerIngredients;\r\n","import { FC } from 'react';\r\nimport { BurgerIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport cn from 'classnames';\r\nimport s from './no-ingredient.module.css';\r\n\r\nconst NoIngredient: FC = ({ children }) => {\r\n  return (\r\n    <p className={cn(s.text, 'text', 'text_type_main-default')}>\r\n      <BurgerIcon type=\"primary\" />\r\n      {children}\r\n    </p>\r\n  );\r\n};\r\n\r\nexport default NoIngredient;\r\n","import { FC, memo } from 'react';\r\nimport { TIngredient } from '../../utils/prop-validator';\r\nimport { ConstructorElement } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { BunPosition } from '../../utils/constants';\r\n\r\n// Components\r\nimport NoIngredient from '../no-ingredient/no-ingredient';\r\n\r\ntype TComponentProps = {\r\n  ingredient: TIngredient;\r\n  position: 'top' | 'bottom' | undefined;\r\n};\r\n\r\nconst BunIngredient: FC<TComponentProps> = ({ ingredient, position }) => {\r\n  const positionName = position === BunPosition.TOP ? 'верх' : 'низ';\r\n\r\n  if (!ingredient)\r\n    return <NoIngredient>Выберите булку ({positionName})</NoIngredient>;\r\n\r\n  const { name, price, image_mobile } = ingredient;\r\n\r\n  return (\r\n    <ConstructorElement\r\n      type={position}\r\n      isLocked={true}\r\n      text={`${name} (${positionName})`}\r\n      price={price}\r\n      thumbnail={image_mobile}\r\n    />\r\n  );\r\n};\r\n\r\nexport default memo(BunIngredient);\r\n","import { memo, useEffect, useRef, FC } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useDrag, useDrop } from 'react-dnd';\r\nimport { TIngredient } from '../../utils/prop-validator';\r\nimport {\r\n  DragIcon,\r\n  ConstructorElement,\r\n} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport cn from 'classnames';\r\nimport s from './main-ingredient.module.css';\r\nimport {\r\n  removeIngredient,\r\n  sortMainIngredients,\r\n} from '../../services/ducks/burger-ingredients/burger-ingredients';\r\n\r\ntype TComponentProps = {\r\n  ingredient: TIngredient;\r\n  ingredientIndex: number;\r\n};\r\n\r\nconst MainIngredient: FC<TComponentProps> = ({\r\n  ingredient,\r\n  ingredientIndex,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const dragDropRef = useRef<HTMLLIElement>(null);\r\n  const { name, price, image_mobile } = ingredient;\r\n\r\n  const [{ isDrag, draggingItem }, dragRef] = useDrag({\r\n    type: 'main-ingredient',\r\n    item: { draggingItemIndex: ingredientIndex },\r\n    collect: (monitor) => ({\r\n      isDrag: monitor.isDragging(),\r\n      draggingItem: monitor.getItem(),\r\n    }),\r\n  });\r\n\r\n  const [{ isHover }, dropRef] = useDrop({\r\n    accept: 'main-ingredient',\r\n    drop() {\r\n      dispatch(\r\n        sortMainIngredients({\r\n          startIndex: draggingItem.draggingItemIndex,\r\n          moveToIndex: ingredientIndex,\r\n        })\r\n      );\r\n    },\r\n    collect: (monitor) => ({\r\n      isHover: monitor.isOver(),\r\n    }),\r\n  });\r\n\r\n  const isHoveredSameIngredient =\r\n    draggingItem?.draggingItemIndex === ingredientIndex;\r\n\r\n  useEffect(() => {\r\n    dragRef(dropRef(dragDropRef));\r\n  }, [dragRef, dropRef]);\r\n\r\n  const handleDeleteIngredient = (ingredientIndex: number): void => {\r\n    dispatch(removeIngredient(ingredientIndex));\r\n  };\r\n\r\n  return (\r\n    <li\r\n      className={cn(s.ingredientItem, {\r\n        [s.ingredientItemDragging]: isDrag,\r\n        [s.ingredientItemHovered]: isHover && !isHoveredSameIngredient,\r\n      })}\r\n      ref={dragDropRef}\r\n    >\r\n      <DragIcon type=\"primary\" />\r\n      <ConstructorElement\r\n        isLocked={false}\r\n        text={name}\r\n        price={price}\r\n        thumbnail={image_mobile}\r\n        handleClose={() => handleDeleteIngredient(ingredientIndex)}\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default memo(MainIngredient);\r\n","import { memo, FC } from 'react';\r\nimport { TIngredients } from '../../utils/prop-validator';\r\nimport s from './main-ingredients-list.module.css';\r\n\r\n// Components\r\nimport NoIngredient from '../no-ingredient/no-ingredient';\r\nimport MainIngredient from '../main-ingredient/main-ingredient';\r\n\r\ntype TComponentProps = {\r\n  ingredients: TIngredients;\r\n};\r\n\r\nconst MainIngredientsList: FC<TComponentProps> = ({ ingredients }) => {\r\n  if (!ingredients.length)\r\n    return <NoIngredient>Выберите основные ингредиенты</NoIngredient>;\r\n\r\n  return (\r\n    <ul className={s.ingredientsList}>\r\n      {ingredients.map((ingredient, index) => (\r\n        <MainIngredient\r\n          key={`${ingredient._id}-${index}`}\r\n          ingredient={ingredient}\r\n          ingredientIndex={index}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default memo(MainIngredientsList);\r\n","import { memo, FC } from 'react';\r\nimport pt from 'prop-types';\r\nimport {\r\n  Button,\r\n  CurrencyIcon,\r\n} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport cn from 'classnames';\r\nimport s from './submit-section.module.css';\r\n\r\ntype TComponentProps = {\r\n  totalPrice: number;\r\n  isDisabled: boolean;\r\n  handleSendOrder: () => void;\r\n};\r\n\r\nconst SubmitSection: FC<TComponentProps> = ({\r\n  totalPrice,\r\n  isDisabled,\r\n  handleSendOrder,\r\n}) => {\r\n  return (\r\n    <div className={s.submitSection}>\r\n      <p className={cn(s.totalPrice, 'text', 'text_type_digits-medium')}>\r\n        {totalPrice}&nbsp;\r\n        <CurrencyIcon type=\"primary\" />\r\n      </p>\r\n      {!isDisabled && (\r\n        <Button type=\"primary\" size=\"large\" onClick={handleSendOrder}>\r\n          Оформить заказ\r\n        </Button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nSubmitSection.propTypes = {\r\n  totalPrice: pt.number.isRequired,\r\n  isDisabled: pt.bool.isRequired,\r\n  handleSendOrder: pt.func.isRequired,\r\n};\r\n\r\nexport default memo(SubmitSection);\r\n","import { memo, FC } from 'react';\r\nimport { BurgerIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport s from './no-ingredients.module.css';\r\n\r\nconst NoIngredients: FC = () => {\r\n  return (\r\n    <div className={s.noIngredientsBlock}>\r\n      <BurgerIcon type=\"primary\" />\r\n      <h2 className=\"text text_type_main-large mb-3\">Собери свой бургер</h2>\r\n      <p className=\"text text_type_main-medium\">\r\n        Перенесите ингредиенты в конструктор\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(NoIngredients);\r\n","export default __webpack_public_path__ + \"static/media/done.cc5a59a7.gif\";","import { FC } from 'react';\r\nimport OrderAccepted from '../../images/done.gif';\r\nimport s from './order-details.module.css';\r\n\r\ntype TComponentProps = {\r\n  orderNumber: number;\r\n};\r\n\r\nconst OrderDetails: FC<TComponentProps> = ({ orderNumber }) => {\r\n  return (\r\n    <div className={s.container}>\r\n      <h2 className=\"text text_type_digits-large mb-8\">{orderNumber}</h2>\r\n      <p className=\"text text_type_main-medium\">Идентификатор заказа</p>\r\n      <img className=\"mt-15 mb-15\" src={OrderAccepted} alt=\"Заказ принят\" />\r\n      <p className=\"text text_type_main-default mb-2\">\r\n        Ваш заказ начали готовить\r\n      </p>\r\n      <p className=\"text text_type_main-default text_color_inactive\">\r\n        Дождитесь готовности на орбитальной станции\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderDetails;\r\n","import { useCallback, FC } from 'react';\r\nimport { useAppSelector, useAppDispatch } from '../../services/hooks';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDrop } from 'react-dnd';\r\nimport cn from 'classnames';\r\nimport s from './burger-constructor.module.css';\r\nimport {\r\n  getBurgerIngredients,\r\n  getTotalPrice,\r\n  addIngredient,\r\n  resetBurgerIngredients,\r\n} from '../../services/ducks/burger-ingredients/burger-ingredients';\r\nimport {\r\n  sendOrder,\r\n  resetOrder,\r\n  getOrderState,\r\n} from '../../services/ducks/order/order';\r\nimport { BunPosition, RoutePath } from '../../utils/constants';\r\n\r\n// Components\r\nimport BunIngredient from '../bun-ingredient/bun-ingredient';\r\nimport MainIngredientsList from '../main-ingredients-list/main-ingredients-list';\r\nimport SubmitSection from '../submit-section/submit-section';\r\nimport NoIngredients from '../no-ingredients/no-ingredients';\r\nimport Modal from '../modal/modal';\r\nimport OrderDetails from '../order-details/order-details';\r\nimport { checkAuth } from '../../utils/helpers';\r\n\r\nconst BurgerConstructor: FC = () => {\r\n  const history = useHistory();\r\n  const dispatch = useAppDispatch();\r\n  const isAuth = checkAuth();\r\n  const { bunIngredient, mainIngredients } =\r\n    useAppSelector(getBurgerIngredients);\r\n  const { orderNumber, isLoading } = useAppSelector(getOrderState);\r\n  const totalPrice = useAppSelector(getTotalPrice);\r\n  const isIngredientsExist = bunIngredient || mainIngredients.length > 0;\r\n  const [{ isHover }, dropRef] = useDrop({\r\n    accept: 'ingredient',\r\n    drop(ingredient) {\r\n      handleDrop(ingredient);\r\n    },\r\n    canDrop() {\r\n      return !isLoading;\r\n    },\r\n    collect: (monitor) => ({\r\n      isHover: monitor.isOver(),\r\n    }),\r\n  });\r\n\r\n  const handleSendOrder = useCallback(async () => {\r\n    if (!isAuth) {\r\n      return history.push({ pathname: RoutePath.LOGIN });\r\n    }\r\n\r\n    const ingredientsIds = [bunIngredient, ...mainIngredients].map(\r\n      ({ _id }) => _id\r\n    );\r\n    await dispatch(sendOrder(ingredientsIds));\r\n  }, [bunIngredient, mainIngredients, isAuth, dispatch, history]);\r\n\r\n  const handleDrop = useCallback(\r\n    (ingredient) => {\r\n      dispatch(addIngredient(ingredient));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const handleCloseModal = useCallback(() => {\r\n    dispatch(resetOrder());\r\n    dispatch(resetBurgerIngredients());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <section\r\n      className={cn(s.burgerConstructorSection, {\r\n        [s.hoverBurgerConstructorSection]: isHover,\r\n      })}\r\n      ref={dropRef}\r\n    >\r\n      {!isIngredientsExist ? (\r\n        <NoIngredients />\r\n      ) : (\r\n        <>\r\n          <div className={s.ingredientsContainer}>\r\n            <BunIngredient\r\n              ingredient={bunIngredient}\r\n              position={BunPosition.TOP}\r\n            />\r\n            <MainIngredientsList ingredients={mainIngredients} />\r\n            <BunIngredient\r\n              ingredient={bunIngredient}\r\n              position={BunPosition.BOTTOM}\r\n            />\r\n          </div>\r\n          <SubmitSection\r\n            totalPrice={totalPrice}\r\n            isDisabled={!bunIngredient}\r\n            handleSendOrder={handleSendOrder}\r\n          />\r\n          {orderNumber && (\r\n            <Modal isTitled={false} handleCloseModal={handleCloseModal}>\r\n              <OrderDetails orderNumber={orderNumber} />\r\n            </Modal>\r\n          )}\r\n        </>\r\n      )}\r\n      {isLoading && (\r\n        <div className={cn(s.orderSending, 'text', 'text_type_main-large')}>\r\n          Заказ отправляется...\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default BurgerConstructor;\r\n","import { FC } from 'react';\r\nimport { DndProvider } from 'react-dnd';\r\nimport { HTML5Backend } from 'react-dnd-html5-backend';\r\nimport s from './home.module.css';\r\n\r\n// Components\r\nimport BurgerIngredients from '../../components/burger-ingredients/burger-ingredients';\r\nimport BurgerConstructor from '../../components/burger-constructor/burger-constructor';\r\n\r\nconst Home: FC = () => {\r\n  return (\r\n    <div className={s.container}>\r\n      <DndProvider backend={HTML5Backend}>\r\n        <BurgerIngredients />\r\n        <BurgerConstructor />\r\n      </DndProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { ChangeEventHandler, useState, ChangeEvent } from 'react';\r\n\r\ntype TFormState = {\r\n  name?: string;\r\n  email?: string;\r\n  password?: string;\r\n  token?: string;\r\n};\r\n\r\ntype THookReturnValue = {\r\n  isEdited: boolean;\r\n  formData: TFormState;\r\n  handleChangeFormData: (e: ChangeEvent<HTMLInputElement>) => void;\r\n  handleResetFormData: () => void;\r\n};\r\n\r\nexport const useForm = (formState: TFormState): THookReturnValue => {\r\n  const [formData, setFormData] = useState<TFormState>(formState);\r\n  const [isEdited, setIsEdited] = useState<boolean>(false);\r\n\r\n  const handleChangeFormData: ChangeEventHandler<HTMLInputElement> = ({\r\n    target: { name, value },\r\n  }) => {\r\n    setFormData((formData) => ({ ...formData, [name]: value }));\r\n    setIsEdited(true);\r\n  };\r\n\r\n  const handleResetFormData = () => {\r\n    setFormData(formState);\r\n    setIsEdited(false);\r\n  };\r\n\r\n  return {\r\n    isEdited,\r\n    formData,\r\n    handleChangeFormData,\r\n    handleResetFormData,\r\n  };\r\n};\r\n","import { FC } from 'react';\r\nimport cn from 'classnames';\r\nimport s from './form-error.module.css';\r\n\r\nconst FormError: FC = ({ children }) => {\r\n  return (\r\n    <p className={cn(s.errorText, 'text', 'text_type_main-default')}>\r\n      {children}\r\n    </p>\r\n  );\r\n};\r\n\r\nexport default FormError;\r\n","import { useEffect, FC, SyntheticEvent } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  EmailInput,\r\n  PasswordInput,\r\n  Input,\r\n  Button,\r\n} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport s from './registration.module.css';\r\nimport { useForm } from '../../hooks/form';\r\nimport { RoutePath } from '../../utils/constants';\r\nimport {\r\n  getUserState,\r\n  registerUser,\r\n  resetStatus,\r\n} from '../../services/ducks/user/user';\r\nimport { checkAuth } from '../../utils/helpers';\r\n\r\n// Components\r\nimport FormError from '../../components/form-error/form-error';\r\n\r\nconst Registration: FC = () => {\r\n  const dispatch = useDispatch();\r\n  const isAuth = checkAuth();\r\n  const { isLoading, isError, success } = useSelector(getUserState);\r\n  const { formData, handleChangeFormData } = useForm({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n  });\r\n  const { name = '', email = '', password = '' } = formData;\r\n\r\n  const handleSubmit = async (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    // @ts-ignore\r\n    await dispatch(registerUser(formData));\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(resetStatus());\r\n    };\r\n  }, [dispatch]);\r\n\r\n  if (isAuth || success) {\r\n    return <Redirect to={{ pathname: RoutePath.HOME }} />;\r\n  }\r\n\r\n  return (\r\n    <div className={s.container}>\r\n      <section className={s.section}>\r\n        <h2 className=\"text text_type_main-medium mb-6\">Регистрация</h2>\r\n        {isError && <FormError>Произошла ошибка при регистрации</FormError>}\r\n        <form className={s.form} onSubmit={handleSubmit}>\r\n          <Input\r\n            placeholder=\"Имя\"\r\n            onChange={handleChangeFormData}\r\n            value={name}\r\n            name=\"name\"\r\n          />\r\n          <EmailInput\r\n            onChange={handleChangeFormData}\r\n            value={email}\r\n            name=\"email\"\r\n          />\r\n          <PasswordInput\r\n            onChange={handleChangeFormData}\r\n            value={password}\r\n            name=\"password\"\r\n          />\r\n          {!isLoading && (\r\n            <Button type=\"primary\" size=\"medium\">\r\n              Зарегистрироваться\r\n            </Button>\r\n          )}\r\n        </form>\r\n        <p className=\"text text_type_main-small\">\r\n          Уже зарегистрированы?{' '}\r\n          <Link to={RoutePath.LOGIN} className={s.link}>\r\n            Войти\r\n          </Link>\r\n        </p>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Registration;\r\n","import { SyntheticEvent, useEffect, FC } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, Redirect, useLocation } from 'react-router-dom';\r\nimport {\r\n  EmailInput,\r\n  PasswordInput,\r\n  Button,\r\n} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport s from './login.module.css';\r\nimport { useForm } from '../../hooks/form';\r\nimport { RoutePath } from '../../utils/constants';\r\nimport {\r\n  getUserState,\r\n  loginUser,\r\n  resetStatus,\r\n} from '../../services/ducks/user/user';\r\nimport { checkAuth } from '../../utils/helpers';\r\n\r\n// Components\r\nimport FormError from '../../components/form-error/form-error';\r\n\r\ntype TLocationState = {\r\n  from: {\r\n    pathname: string;\r\n  };\r\n};\r\n\r\nconst Login: FC = () => {\r\n  const dispatch = useDispatch();\r\n  const isAuth = checkAuth();\r\n  const location = useLocation<TLocationState>();\r\n  const { isLoading, isError, success } = useSelector(getUserState);\r\n  const { formData, handleChangeFormData } = useForm({\r\n    email: '',\r\n    password: '',\r\n  });\r\n  const { email = '', password = '' } = formData;\r\n\r\n  const handleSubmit = async (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    // @ts-ignore\r\n    await dispatch(loginUser(formData));\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(resetStatus());\r\n    };\r\n  }, [dispatch]);\r\n\r\n  if (isAuth || success) {\r\n    return (\r\n      <Redirect\r\n        to={{\r\n          pathname: location.state\r\n            ? location.state.from.pathname\r\n            : RoutePath.HOME,\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={s.container}>\r\n      <section className={s.section}>\r\n        <h2 className=\"text text_type_main-medium mb-6\">Вход</h2>\r\n        {isError && <FormError>Неверный email или пароль</FormError>}\r\n        <form className={s.form} onSubmit={handleSubmit}>\r\n          <EmailInput\r\n            onChange={handleChangeFormData}\r\n            value={email}\r\n            name=\"email\"\r\n          />\r\n          <PasswordInput\r\n            onChange={handleChangeFormData}\r\n            value={password}\r\n            name=\"password\"\r\n          />\r\n          {!isLoading && (\r\n            <Button type=\"primary\" size=\"medium\">\r\n              Войти\r\n            </Button>\r\n          )}\r\n        </form>\r\n        <p className=\"text text_type_main-small mb-4\">\r\n          Вы новый пользователь?{' '}\r\n          <Link to={RoutePath.REGISTRATION} className={s.link}>\r\n            Зарегистрироваться\r\n          </Link>\r\n        </p>\r\n        <p className=\"text text_type_main-small\">\r\n          Забыли пароль?{' '}\r\n          <Link to={RoutePath.FORGOT_PASSWORD} className={s.link}>\r\n            Восстановить пароль\r\n          </Link>\r\n        </p>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { FC, SyntheticEvent } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  EmailInput,\r\n  PasswordInput,\r\n  Input,\r\n  Button,\r\n} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport s from './profile-form.module.css';\r\nimport { useForm } from '../../hooks/form';\r\nimport { getUserState, updateUserData } from '../../services/ducks/user/user';\r\n\r\nconst ProfileForm: FC = () => {\r\n  const dispatch = useDispatch();\r\n  const { userData } = useSelector(getUserState);\r\n  const { formData, isEdited, handleChangeFormData, handleResetFormData } =\r\n    useForm({\r\n      name: userData?.name || '',\r\n      email: userData?.email || '',\r\n      password: '',\r\n    });\r\n  const { name = '', email = '', password = '' } = formData;\r\n\r\n  const handleSubmit = async (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    // @ts-ignore\r\n    await dispatch(updateUserData(formData));\r\n  };\r\n\r\n  return (\r\n    <div className={s.container}>\r\n      <section className={s.section}>\r\n        <form className={s.form} onSubmit={handleSubmit}>\r\n          <Input\r\n            type={'text'}\r\n            placeholder=\"Имя\"\r\n            onChange={handleChangeFormData}\r\n            value={name}\r\n            icon={'EditIcon'}\r\n            name=\"name\"\r\n          />\r\n          <EmailInput\r\n            onChange={handleChangeFormData}\r\n            value={email}\r\n            name=\"email\"\r\n          />\r\n          <PasswordInput\r\n            onChange={handleChangeFormData}\r\n            value={password}\r\n            name=\"password\"\r\n          />\r\n          {isEdited && (\r\n            <div className={s.formActions}>\r\n              <button\r\n                className={`${s.cancelBtn} text text_type_main-default`}\r\n                type=\"reset\"\r\n                onClick={handleResetFormData}\r\n              >\r\n                Отмена\r\n              </button>\r\n              <Button type=\"primary\" size=\"medium\">\r\n                Сохранить\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </form>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileForm;\r\n","import { FC } from 'react';\r\nimport cn from 'classnames';\r\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport s from './order-item.module.css';\r\nimport { IngredientType, OrderStatus } from '../../utils/constants';\r\nimport { TOrderPopulated } from '../../utils/prop-validator';\r\nimport { generateDate, getOrderStatus } from '../../utils/helpers';\r\n\r\ntype TComponentProps = {\r\n  order: TOrderPopulated;\r\n  isShownOrderStatus: boolean;\r\n};\r\n\r\nconst TOTAL_INGREDIENTS = 7;\r\n\r\nconst OrderItem: FC<TComponentProps> = ({ order, isShownOrderStatus }) => {\r\n  const { number, createdAt, name, status, ingredients, totalPrice } = order;\r\n\r\n  return (\r\n    <>\r\n      <div className={s.orderInfo}>\r\n        <span className=\"text text_type_digits-default\">#{number}</span>\r\n        <span className=\"text text_type_main-default text_color_inactive\">\r\n          {generateDate(createdAt)}\r\n        </span>\r\n      </div>\r\n      <h2\r\n        className={cn(\r\n          'text',\r\n          'text_type_main-medium',\r\n          isShownOrderStatus ? 'mb-2' : 'mb-6'\r\n        )}\r\n      >\r\n        {name}\r\n      </h2>\r\n      {isShownOrderStatus && (\r\n        <p\r\n          className={cn(\r\n            { [s.readyStatus]: status === OrderStatus.done },\r\n            'text',\r\n            'text_type_main-default',\r\n            'mb-6'\r\n          )}\r\n        >\r\n          {getOrderStatus(status)}\r\n        </p>\r\n      )}\r\n      <div className={s.ingredientsBlock}>\r\n        <div className={s.ingredientsList}>\r\n          {ingredients\r\n            .slice(0, TOTAL_INGREDIENTS)\r\n            .map(({ _id, name, type, image_mobile, quantity }, index) => (\r\n              <div\r\n                key={`${_id}`}\r\n                className={s.ingredient}\r\n                style={{\r\n                  zIndex: ingredients.length - index,\r\n                }}\r\n              >\r\n                {quantity > 1 && type !== IngredientType.BUN && (\r\n                  <span className={`${s.quantity} text text_type_main-default`}>\r\n                    +{quantity}\r\n                  </span>\r\n                )}\r\n                <img src={image_mobile} alt={name} />\r\n              </div>\r\n            ))}\r\n          {ingredients.length > TOTAL_INGREDIENTS ? (\r\n            <p\r\n              className=\"text text_type_main-default\"\r\n              style={{ display: 'inline' }}\r\n            >\r\n              ...+{ingredients.length - TOTAL_INGREDIENTS}\r\n            </p>\r\n          ) : (\r\n            ''\r\n          )}\r\n        </div>\r\n        <span className={s.totalPrice}>\r\n          <span className=\"text text_type_digits-default\">{totalPrice}</span>\r\n          <CurrencyIcon type=\"primary\" />\r\n        </span>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderItem;\r\n","import { FC } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport s from './orders-list.module.css';\r\nimport { TOrdersPopulated } from '../../utils/prop-validator';\r\n\r\n// Components\r\nimport OrderItem from '../order-item/order-item';\r\n\r\ntype TComponentProps = {\r\n  orders: TOrdersPopulated;\r\n  isShownOrderStatus: boolean;\r\n};\r\n\r\nconst OrdersList: FC<TComponentProps> = ({ orders, isShownOrderStatus }) => {\r\n  const location = useLocation();\r\n  return (\r\n    <div className={s.container}>\r\n      {orders.map((order) => (\r\n        <Link\r\n          key={order._id}\r\n          to={{\r\n            pathname: `${location.pathname}/${order.number}`,\r\n            state: { modalLocation: location, currentOrder: order },\r\n          }}\r\n          className={s.orderLink}\r\n        >\r\n          <OrderItem\r\n            key={order._id}\r\n            order={order}\r\n            isShownOrderStatus={isShownOrderStatus}\r\n          />\r\n        </Link>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrdersList;\r\n","import { useEffect, FC } from 'react';\r\nimport {\r\n  NavLink,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n  useLocation,\r\n  useHistory,\r\n} from 'react-router-dom';\r\nimport { useAppDispatch, useAppSelector } from '../../services/hooks';\r\nimport cn from 'classnames';\r\nimport s from './profile.module.css';\r\nimport {\r\n  getUserState,\r\n  logoutUser,\r\n  fetchUserData,\r\n  resetStatus,\r\n} from '../../services/ducks/user/user';\r\nimport { getAllOrders } from '../../services/ducks/orders/orders';\r\nimport { RoutePath } from '../../utils/constants';\r\n\r\n// Components\r\nimport ProfileForm from '../../components/profile-form/profile-form';\r\nimport OrdersList from '../../components/orders-list/orders-list';\r\nimport Loader from '../../components/loader/loader';\r\nimport { wsAction } from '../../services/ducks/orders/orders';\r\n\r\nconst Note = {\r\n  [RoutePath.PROFILE]:\r\n    'В этом разделе вы можете изменить свои персональные данные',\r\n  [RoutePath.PROFILE_ORDERS]:\r\n    'В этом разделе вы можете просмотреть свою историю заказов',\r\n};\r\n\r\nconst Profile: FC = () => {\r\n  const dispatch = useAppDispatch();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const { success, isError } = useAppSelector(getUserState);\r\n  const ordersData = useAppSelector(getAllOrders);\r\n\r\n  const handleLogout = async () => {\r\n    await dispatch(logoutUser());\r\n    history.push({ pathname: RoutePath.LOGIN });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      await dispatch(fetchUserData());\r\n    };\r\n    fetchUser();\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(resetStatus());\r\n      dispatch(wsAction.onClose());\r\n    };\r\n  }, [dispatch]);\r\n\r\n  if (isError) {\r\n    return <Redirect to={{ pathname: RoutePath.LOGIN }} />;\r\n  }\r\n\r\n  if (!success || !ordersData) return <Loader />;\r\n\r\n  return (\r\n    <div className={s.container}>\r\n      <div className={s.profileNav}>\r\n        <NavLink\r\n          to={RoutePath.PROFILE}\r\n          className={cn(s.navItem, 'text', 'text_type_main-medium')}\r\n          activeClassName={s.navItemActive}\r\n          exact\r\n        >\r\n          Профиль\r\n        </NavLink>\r\n        <NavLink\r\n          to={RoutePath.PROFILE_ORDERS}\r\n          className={cn(s.navItem, 'text', 'text_type_main-medium')}\r\n          activeClassName={s.navItemActive}\r\n        >\r\n          История заказов\r\n        </NavLink>\r\n        <button\r\n          className={cn(s.navBtn, 'text', 'text_type_main-medium')}\r\n          onClick={handleLogout}\r\n        >\r\n          Выход\r\n        </button>\r\n        <span className=\"text text_type_main-small text_color_inactive\">\r\n          {Note[location.pathname]}\r\n        </span>\r\n      </div>\r\n      <div className={s.content}>\r\n        <Switch>\r\n          <Route path={RoutePath.PROFILE} exact>\r\n            <ProfileForm />\r\n          </Route>\r\n          <Route path={RoutePath.PROFILE_ORDERS} exact>\r\n            <OrdersList orders={ordersData.orders} isShownOrderStatus />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import { FC } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport cn from 'classnames';\r\nimport s from './ingredient.module.css';\r\nimport {\r\n  getIngredient,\r\n  getIngredientsState,\r\n} from '../../services/ducks/ingredients/ingredients';\r\nimport { RoutePath } from '../../utils/constants';\r\nimport { TIngredient } from '../../utils/prop-validator';\r\n\r\n// Components\r\nimport IngredientDetails from '../../components/ingredient-details/ingredient-details';\r\n\r\ntype TProps = {\r\n  id: string;\r\n};\r\n\r\nconst Ingredient: FC = () => {\r\n  const { id } = useParams<TProps>();\r\n  const { ingredientsList } = useSelector(getIngredientsState);\r\n  const currentIngredient = useSelector(getIngredient(id));\r\n\r\n  if (!currentIngredient) {\r\n    return (\r\n      <div className={s.container}>\r\n        <h1 className=\"text text_type_main-large mb-8\">\r\n          Ингредиент не найден!\r\n        </h1>\r\n        <p className=\"text text_type_main-medium mb-10\">\r\n          Посмотрите весь наш список ингредиентов:\r\n        </p>\r\n        <div className={s.ingredientsList}>\r\n          {ingredientsList.map(({ _id, name, image }: TIngredient) => (\r\n            <Link\r\n              to={{ pathname: RoutePath.INGREDIENT(_id) }}\r\n              className={s.ingredientItem}\r\n              key={_id}\r\n            >\r\n              <img src={image} alt={name} />\r\n              <p className=\"text text_type_main-small\">{name}</p>\r\n            </Link>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={s.ingredientContainer}>\r\n      <h2 className={cn(s.title, 'text', 'text_type_main-large')}>\r\n        Детали ингредиента\r\n      </h2>\r\n      <IngredientDetails ingredient={currentIngredient} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Ingredient;\r\n","import { SyntheticEvent, useEffect, FC } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, Redirect, useHistory } from 'react-router-dom';\r\nimport {\r\n  EmailInput,\r\n  Button,\r\n} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport s from './forgot-password.module.css';\r\nimport { useForm } from '../../hooks/form';\r\nimport { RoutePath } from '../../utils/constants';\r\nimport {\r\n  getUserState,\r\n  resetStatus,\r\n  sendUserEmailToResetPassword,\r\n} from '../../services/ducks/user/user';\r\nimport { checkAuth } from '../../utils/helpers';\r\n\r\n// Components\r\nimport FormError from '../../components/form-error/form-error';\r\n\r\nconst ForgotPassword: FC = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const isAuth = checkAuth();\r\n  const { isLoading, isError, success } = useSelector(getUserState);\r\n  const { formData, handleChangeFormData } = useForm({\r\n    email: '',\r\n  });\r\n  const { email = '' } = formData;\r\n\r\n  const handleSubmit = async (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    // @ts-ignore\r\n    await dispatch(sendUserEmailToResetPassword(formData));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      return history.push({\r\n        pathname: RoutePath.RESET_PASSWORD,\r\n        state: { isFromForgotPasswordPage: true },\r\n      });\r\n    }\r\n    return () => {\r\n      dispatch(resetStatus());\r\n    };\r\n  }, [dispatch, history, success]);\r\n\r\n  if (success) {\r\n    return (\r\n      <Redirect\r\n        to={{\r\n          pathname: RoutePath.RESET_PASSWORD,\r\n          state: { isFromForgotPasswordPage: true },\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (isAuth) {\r\n    return <Redirect to={{ pathname: RoutePath.HOME }} />;\r\n  }\r\n\r\n  return (\r\n    <div className={s.container}>\r\n      <section className={s.section}>\r\n        <h2 className=\"text text_type_main-medium mb-6\">\r\n          Восстановление пароля\r\n        </h2>\r\n        {isError && <FormError>Произошла ошибка при отправке email</FormError>}\r\n        <form className={s.form} onSubmit={handleSubmit}>\r\n          <EmailInput\r\n            onChange={handleChangeFormData}\r\n            value={email}\r\n            name=\"email\"\r\n          />\r\n          {!isLoading && (\r\n            <Button type=\"primary\" size=\"medium\">\r\n              Восстановить\r\n            </Button>\r\n          )}\r\n        </form>\r\n        <p className=\"text text_type_main-small mb-4\">\r\n          Вспомнили пароль?{' '}\r\n          <Link to={RoutePath.LOGIN} className={s.link}>\r\n            Войти\r\n          </Link>\r\n        </p>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n","import { useEffect, FC, SyntheticEvent } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, Redirect, useHistory, useLocation } from 'react-router-dom';\r\nimport {\r\n  PasswordInput,\r\n  Input,\r\n  Button,\r\n} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport s from './reset-password.module.css';\r\nimport { useForm } from '../../hooks/form';\r\nimport { RoutePath } from '../../utils/constants';\r\nimport {\r\n  getUserState,\r\n  resetStatus,\r\n  resetPassword,\r\n} from '../../services/ducks/user/user';\r\nimport { checkAuth } from '../../utils/helpers';\r\n\r\n// Components\r\nimport FormError from '../../components/form-error/form-error';\r\n\r\ntype TLocationState = {\r\n  isFromForgotPasswordPage: boolean;\r\n};\r\n\r\nconst ResetPassword: FC = () => {\r\n  const history = useHistory();\r\n  const location = useLocation<TLocationState>();\r\n  const isFromForgotPasswordPage = location.state?.isFromForgotPasswordPage;\r\n  const dispatch = useDispatch();\r\n  const isAuth = checkAuth();\r\n  const { isLoading, isError, success } = useSelector(getUserState);\r\n  const { formData, handleChangeFormData } = useForm({\r\n    token: '',\r\n    password: '',\r\n  });\r\n  const { token = '', password = '' } = formData;\r\n\r\n  const handleSubmit = async (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    // @ts-ignore\r\n    await dispatch(resetPassword(formData));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      return history.push({ pathname: RoutePath.LOGIN });\r\n    }\r\n    return () => {\r\n      dispatch(resetStatus());\r\n    };\r\n  }, [dispatch, history, success]);\r\n\r\n  if (isAuth) {\r\n    return <Redirect to={{ pathname: RoutePath.HOME }} />;\r\n  }\r\n\r\n  if (!isFromForgotPasswordPage) {\r\n    return <Redirect to={{ pathname: RoutePath.FORGOT_PASSWORD }} />;\r\n  }\r\n\r\n  return (\r\n    <div className={s.container}>\r\n      <section className={s.section}>\r\n        <h2 className=\"text text_type_main-medium mb-6\">\r\n          Восстановление пароля\r\n        </h2>\r\n        {isError && (\r\n          <FormError>Произошла ошибка при восстановлении пароля</FormError>\r\n        )}\r\n        <form className={s.form} onSubmit={handleSubmit}>\r\n          <PasswordInput\r\n            onChange={handleChangeFormData}\r\n            value={password}\r\n            name=\"password\"\r\n          />\r\n          <Input\r\n            placeholder=\"Введите код из письма\"\r\n            onChange={handleChangeFormData}\r\n            value={token}\r\n            name=\"token\"\r\n          />\r\n          {!isLoading && (\r\n            <Button type=\"primary\" size=\"medium\">\r\n              Сохранить\r\n            </Button>\r\n          )}\r\n        </form>\r\n        <p className=\"text text_type_main-small mb-4\">\r\n          Вспомнили пароль?{' '}\r\n          <Link to={RoutePath.LOGIN} className={s.link}>\r\n            Войти\r\n          </Link>\r\n        </p>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n","import { FC } from 'react';\r\nimport { InfoIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport s from './not-found.module.css';\r\n\r\nconst NotFound: FC = () => {\r\n  return (\r\n    <div className={s.container}>\r\n      <section className={s.notFoundSection}>\r\n        <InfoIcon type=\"primary\" />\r\n        <p className=\"text text_type_digits-large\">404</p>\r\n        <p className=\"text text_type_main-large\">Сраница не найдена</p>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import { ReactNode, useEffect, FC } from 'react';\r\nimport cn from 'classnames';\r\nimport s from './feed.module.css';\r\nimport {\r\n  getFilteredOrders,\r\n  getAllOrders,\r\n} from '../../services/ducks/orders/orders';\r\nimport { useAppSelector, useAppDispatch } from '../../services/hooks';\r\nimport { OrderStatus } from '../../utils/constants';\r\nimport { wsAction } from '../../services/ducks/orders/orders';\r\n\r\n// Components\r\nimport OrderList from '../../components/orders-list/orders-list';\r\nimport Loader from '../../components/loader/loader';\r\n\r\nconst Feed: FC = () => {\r\n  const dispatch = useAppDispatch();\r\n  const ordersData = useAppSelector(getAllOrders);\r\n  const filteredOrders = useAppSelector(getFilteredOrders);\r\n\r\n  useEffect(() => {\r\n    dispatch(wsAction.wsInitAllOrders());\r\n    return () => {\r\n      dispatch(wsAction.onClose());\r\n    };\r\n  }, [dispatch]);\r\n\r\n  if (!ordersData) return <Loader />;\r\n\r\n  const { orders, total, totalToday } = ordersData;\r\n\r\n  const renderStatusBlock = (title: string, status: string): ReactNode => {\r\n    return (\r\n      <div\r\n        className={cn(\r\n          s.statusBlock,\r\n          status === OrderStatus.done ? 'pr-5' : 'pl-5'\r\n        )}\r\n      >\r\n        <h2 className=\"text text_type_main-medium mb-6\">{title}:</h2>\r\n        <div className={s.orders}>\r\n          {filteredOrders[status]\r\n            ?.slice(0, 3)\r\n            .map((chunk: number[], index: number) => {\r\n              return (\r\n                <ul key={index}>\r\n                  {chunk.map((number) => (\r\n                    <li\r\n                      key={number}\r\n                      className=\"text text_type_digits-default mb-2\"\r\n                      style={{\r\n                        color:\r\n                          status === OrderStatus.done ? '#00cccc' : '#F2F2F3',\r\n                      }}\r\n                    >\r\n                      {number}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              );\r\n            })}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={s.container}>\r\n      <h1 className=\"text text_type_main-large mb-5\">Лента заказов</h1>\r\n      <div className={s.content}>\r\n        <OrderList orders={orders} isShownOrderStatus={false} />\r\n        <section className={s.dashboard}>\r\n          <div className={s.statusContainer}>\r\n            {renderStatusBlock('Готовы', OrderStatus.done)}\r\n            {renderStatusBlock('В работе', OrderStatus.pending)}\r\n          </div>\r\n          <h2 className=\"text text_type_main-medium\">\r\n            Выполнено за все время:\r\n          </h2>\r\n          <p className=\"text text_type_digits-large mb-15\">{total}</p>\r\n          <h2 className=\"text text_type_main-medium\">Выполнено за сегодня:</h2>\r\n          <p className=\"text text_type_digits-large\">{totalToday}</p>\r\n        </section>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Feed;\r\n","import { useEffect, FC } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport cn from 'classnames';\r\nimport s from './order.module.css';\r\nimport {\r\n  fetchCurrentOrder,\r\n  clearCurrentOrder,\r\n  getOrder,\r\n  getOrdersState,\r\n} from '../../services/ducks/orders/orders';\r\nimport { useAppDispatch, useAppSelector } from '../../services/hooks';\r\n\r\n// Components\r\nimport OrderInfo from '../../components/order-info/order-info';\r\nimport Loader from '../../components/loader/loader';\r\nimport { BurgerIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\ntype TParams = {\r\n  id: string;\r\n};\r\n\r\nconst Order: FC = () => {\r\n  const dispatch = useAppDispatch();\r\n  const { id } = useParams<TParams>();\r\n  const { isLoading } = useAppSelector(getOrdersState);\r\n  const order = useAppSelector(getOrder);\r\n\r\n  useEffect(() => {\r\n    const fetchOrder = async () => {\r\n      await dispatch(fetchCurrentOrder(id));\r\n    };\r\n    fetchOrder();\r\n    return () => {\r\n      dispatch(clearCurrentOrder());\r\n    };\r\n  }, [dispatch, id]);\r\n\r\n  if (isLoading) return <Loader />;\r\n  if (!order)\r\n    return (\r\n      <div className={s.orderNotFound}>\r\n        <BurgerIcon type=\"primary\" />\r\n        <h2 className=\"text text_type_main-large\">\r\n          Заказ c номером {id} не найден\r\n        </h2>\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <div className={s.orderContainer}>\r\n      <h2\r\n        className={cn(\r\n          s.orderNumber,\r\n          'text',\r\n          'text_type_digits-default',\r\n          'mb-10'\r\n        )}\r\n      >\r\n        #{order.number}\r\n      </h2>\r\n      <OrderInfo order={order} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Order;\r\n","import { useEffect, useCallback, FC } from 'react';\r\nimport { useAppDispatch, useAppSelector } from '../../services/hooks';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  useLocation,\r\n  useHistory,\r\n} from 'react-router-dom';\r\nimport {\r\n  getIngredientsState,\r\n  fetchAllIngredients,\r\n} from '../../services/ducks/ingredients/ingredients';\r\nimport { getAppState } from '../../services/ducks/app/app';\r\nimport { RoutePath, REPO_NAME } from '../../utils/constants';\r\nimport { TIngredient, TOrderPopulated } from '../../utils/prop-validator';\r\n\r\n// Components\r\nimport Layout from '../layout/layout';\r\nimport Loader from '../loader/loader';\r\nimport Error from '../error/error';\r\nimport Modal from '../modal/modal';\r\nimport IngredientDetails from '../ingredient-details/ingredient-details';\r\nimport OrderInfo from '../order-info/order-info';\r\nimport ProtectedRoute from '../protected-route/protected-route';\r\n\r\n// Pages\r\nimport Home from '../../pages/home/home';\r\nimport Registration from '../../pages/registration/registration';\r\nimport Login from '../../pages/login/login';\r\nimport Profile from '../../pages/profile/profile';\r\nimport Ingredient from '../../pages/ingredient/ingredient';\r\nimport ForgotPassword from '../../pages/forgot-password/forgot-password';\r\nimport ResetPassword from '../../pages/reset-password/reset-password';\r\nimport NotFound from '../../pages/not-found/not-found';\r\nimport Feed from '../../pages/feed/feed';\r\nimport Order from '../../pages/order/order';\r\n\r\ntype TLocationItem = {\r\n  hash: string;\r\n  key: string;\r\n  pathname: string;\r\n  search: string;\r\n  state: undefined;\r\n};\r\n\r\ntype TLocationState = {\r\n  modalLocation: TLocationItem;\r\n  currentIngredient: TIngredient;\r\n  currentOrder: TOrderPopulated;\r\n};\r\n\r\nconst App: FC = () => {\r\n  const dispatch = useAppDispatch();\r\n  const history = useHistory();\r\n  const location = useLocation<TLocationState>();\r\n  const modalLocation = location.state?.modalLocation;\r\n  const currentIngredient = location.state?.currentIngredient;\r\n  const currentOrder = location.state?.currentOrder;\r\n  const { isLoading } = useAppSelector(getIngredientsState);\r\n  const { isError } = useAppSelector(getAppState);\r\n\r\n  useEffect(() => {\r\n    const fetchIngredients = async () => {\r\n      await dispatch(fetchAllIngredients());\r\n    };\r\n    fetchIngredients();\r\n  }, [dispatch]);\r\n\r\n  const handleCloseModal = useCallback(() => {\r\n    history.goBack();\r\n  }, [history]);\r\n\r\n  if (isLoading) return <Loader />;\r\n\r\n  if (isError) {\r\n    return (\r\n      <Router basename={REPO_NAME}>\r\n        <Layout>\r\n          <Error>Произошла ошибка на сервере...</Error>\r\n        </Layout>\r\n      </Router>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <Switch location={modalLocation || location}>\r\n        <Route path={RoutePath.HOME} exact>\r\n          <Home />\r\n        </Route>\r\n        <Route path={RoutePath.LOGIN} exact>\r\n          <Login />\r\n        </Route>\r\n        <Route path={RoutePath.REGISTRATION} exact>\r\n          <Registration />\r\n        </Route>\r\n        <Route path={RoutePath.FORGOT_PASSWORD} exact>\r\n          <ForgotPassword />\r\n        </Route>\r\n        <Route path={RoutePath.RESET_PASSWORD} exact>\r\n          <ResetPassword />\r\n        </Route>\r\n        <ProtectedRoute\r\n          path={[RoutePath.PROFILE, RoutePath.PROFILE_ORDERS]}\r\n          exact\r\n        >\r\n          <Profile />\r\n        </ProtectedRoute>\r\n        <ProtectedRoute path={RoutePath.PROFILE_ORDERS_ID(':id')} exact>\r\n          <Order />\r\n        </ProtectedRoute>\r\n        <Route path={RoutePath.FEED} exact>\r\n          <Feed />\r\n        </Route>\r\n        <Route path={RoutePath.FEED_ID(':id')} exact>\r\n          <Order />\r\n        </Route>\r\n        <Route path={RoutePath.INGREDIENT(':id')} exact>\r\n          <Ingredient />\r\n        </Route>\r\n        <Route>\r\n          <NotFound />\r\n        </Route>\r\n      </Switch>\r\n      {modalLocation && (\r\n        <Route path={RoutePath.INGREDIENT(':id')}>\r\n          <Modal\r\n            title=\"Детали ингредиента\"\r\n            isTitled\r\n            titleClasses=\"text text_type_main-large\"\r\n            handleCloseModal={handleCloseModal}\r\n          >\r\n            <IngredientDetails ingredient={currentIngredient} />\r\n          </Modal>\r\n        </Route>\r\n      )}\r\n      {modalLocation && (\r\n        <Route\r\n          path={[RoutePath.FEED_ID(':id'), RoutePath.PROFILE_ORDERS_ID(':id')]}\r\n        >\r\n          <Modal\r\n            title={`#${currentOrder?.number}`}\r\n            titleClasses=\"text text_type_digits-default mb-10\"\r\n            isTitled\r\n            handleCloseModal={handleCloseModal}\r\n          >\r\n            <OrderInfo order={currentOrder} />\r\n          </Modal>\r\n        </Route>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './services/store';\r\nimport { REPO_NAME } from './utils/constants';\r\n\r\n// Components\r\nimport App from './components/app/app';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <Router basename={REPO_NAME}>\r\n        <App />\r\n      </Router>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"order-info_container__7NKHK\",\"orderBlock\":\"order-info_orderBlock__4fgNA\",\"number\":\"order-info_number__1ZjuT\",\"readyStatus\":\"order-info_readyStatus__1Tdv0\",\"ingredientsBlock\":\"order-info_ingredientsBlock__20lW-\",\"ingredientsList\":\"order-info_ingredientsList__3WKV1\",\"ingredient\":\"order-info_ingredient__1ROzF\",\"image\":\"order-info_image__2MUgS\",\"name\":\"order-info_name__2_v_e\",\"quantity\":\"order-info_quantity__16rVM\",\"orderInfo\":\"order-info_orderInfo__kGL6K\",\"totalPrice\":\"order-info_totalPrice__1FGyC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"app-header_header__2N7pQ\",\"mainNav\":\"app-header_mainNav__2JDcC\",\"logo\":\"app-header_logo__b5lNO\",\"navItem\":\"app-header_navItem__An920\",\"navItemActive\":\"app-header_navItemActive__6Wipg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"profile_container__yOvlf\",\"profileNav\":\"profile_profileNav__HXs90\",\"navItem\":\"profile_navItem__1M4XH\",\"navBtn\":\"profile_navBtn__1zw-N\",\"navItemActive\":\"profile_navItemActive__1uRsN\",\"content\":\"profile_content__xxa1O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderInfo\":\"order-item_orderInfo__1VFIi\",\"ingredientsBlock\":\"order-item_ingredientsBlock__9QyRB\",\"ingredientsList\":\"order-item_ingredientsList__2GU-z\",\"ingredient\":\"order-item_ingredient__3nGym\",\"quantity\":\"order-item_quantity__wdlfI\",\"readyStatus\":\"order-item_readyStatus__2sAm2\",\"totalPrice\":\"order-item_totalPrice__1M4si\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"feed_container__2EMlR\",\"content\":\"feed_content__C8bxV\",\"dashboard\":\"feed_dashboard__iQhmH\",\"statusContainer\":\"feed_statusContainer__1HIoR\",\"statusBlock\":\"feed_statusBlock__mpIS8\",\"orders\":\"feed_orders__bp0gP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredientItem\":\"ingredient-item_ingredientItem__3aCS4\",\"draggableIngredientItem\":\"ingredient-item_draggableIngredientItem__23O20\",\"image\":\"ingredient-item_image__3XCxM\",\"price\":\"ingredient-item_price__uG3oW\",\"name\":\"ingredient-item_name__2jZ7L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"login_container__2jHXt registration_container__1-YTx\",\"section\":\"login_section__1uUXk registration_section__21qJ1\",\"form\":\"login_form__ojT0h registration_form__33eiK\",\"link\":\"login_link__1gw2O registration_link__1oW5h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"profile-form_container__Buu80\",\"section\":\"profile-form_section__3xMPv\",\"form\":\"profile-form_form__3w2u9\",\"formActions\":\"profile-form_formActions__3Y0q8\",\"cancelBtn\":\"profile-form_cancelBtn__HoD_l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ingredient_container__15CSY\",\"ingredientsList\":\"ingredient_ingredientsList__3hKFs\",\"ingredientItem\":\"ingredient_ingredientItem__lxRq_\",\"ingredientContainer\":\"ingredient_ingredientContainer__3oWc-\",\"title\":\"ingredient_title__3tJBY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ingredient-details_container__1Nn7Y\",\"name\":\"ingredient-details_name__PAVKi\",\"energyValueBlock\":\"ingredient-details_energyValueBlock__3HSO1\",\"valueItem\":\"ingredient-details_valueItem__1w1Fg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burgerConstructorSection\":\"burger-constructor_burgerConstructorSection__2_9Su\",\"hoverBurgerConstructorSection\":\"burger-constructor_hoverBurgerConstructorSection__26Tdr\",\"orderSending\":\"burger-constructor_orderSending__3fNjN\",\"ingredientsContainer\":\"burger-constructor_ingredientsContainer__3IK9c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"registration_container__1-YTx\",\"section\":\"registration_section__21qJ1\",\"form\":\"registration_form__33eiK\",\"link\":\"registration_link__1oW5h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"forgot-password_container__1PpAl registration_container__1-YTx\",\"section\":\"forgot-password_section__1uWru registration_section__21qJ1\",\"form\":\"forgot-password_form__1UuuG registration_form__33eiK\",\"link\":\"forgot-password_link__1IanU registration_link__1oW5h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"reset-password_container__xgUS1 registration_container__1-YTx\",\"section\":\"reset-password_section__2VxDI registration_section__21qJ1\",\"form\":\"reset-password_form__14J0h registration_form__33eiK\",\"link\":\"reset-password_link__3vZtn registration_link__1oW5h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loaderWrapper\":\"loader_loaderWrapper__3uBwA\",\"logoContainer\":\"loader_logoContainer__MY0h9\",\"spinner\":\"loader_spinner__2NFaj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__2sWdS\",\"modalContainer\":\"modal_modalContainer__3IhB9 modal_modal__2sWdS\",\"modalContainerNoTitle\":\"modal_modalContainerNoTitle__3XvXx modal_modal__2sWdS\",\"modalTitle\":\"modal_modalTitle__3AGT9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredientItem\":\"main-ingredient_ingredientItem__3jraE\",\"ingredientItemDragging\":\"main-ingredient_ingredientItemDragging__3Wb5Z\",\"ingredientItemHovered\":\"main-ingredient_ingredientItemHovered__1rC8R\",\"color_change\":\"main-ingredient_color_change__3ZOIe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderContainer\":\"order_orderContainer__14Itv\",\"orderNumber\":\"order_orderNumber__2ukn_\",\"orderNotFound\":\"order_orderNotFound__2256d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorWrapper\":\"error_errorWrapper__1AM2g\",\"errorContainer\":\"error_errorContainer__3RDyY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"submitSection\":\"submit-section_submitSection__2l7qn\",\"totalPrice\":\"submit-section_totalPrice__2PfUJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"orders-list_container__2tiCV\",\"orderLink\":\"orders-list_orderLink__-EkTq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"not-found_container__2VxoH\",\"notFoundSection\":\"not-found_notFoundSection__1emlq\"};"],"sourceRoot":""}